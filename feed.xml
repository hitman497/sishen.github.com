<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Do Great Things - 叶玎玎</title>
  <subtitle> 叶玎玎在技术、创业、团队协作和项目管理上的思考和分享</subtitle>
  <id>http://yedingding.com</id>
  <link href="http://yedingding.com/"/>
  <link href="http://yedingding.com/feed.xml" rel="self"/>
  <updated>2014-08-13T10:00:00+08:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Excel，熟悉又不熟悉的项目管理工具</title>
    <link rel="alternate" href="/2014/08/13/use-excel-for-project-management.html"/>
    <id>/2014/08/13/use-excel-for-project-management.html</id>
    <published>2014-08-13T10:00:00+08:00</published>
    <updated>2014-08-13T10:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文转载自&lt;a href="https://fengcheco.com/blog/use-excel-for-project-management/"&gt;风车官方博客&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果有人在市场上做个调查，目前使用最广泛的项目管理工具是啥，我估计结果不是  Microsoft Project，不是 Jira，不是 Redmine，而是 Excel。在做风车的过程中，接触到不少团队，包括一些跟互联网很近的技术创业公司，都在使用 Excel 管理项目，也有一些用户问我们如何能从 Excel 管理平滑地迁移过来。所以，风车在首页特别跟 Excel 做了对比，我们也的确有不少客户是从 Excel 管理转到风车。这篇文章就来谈谈用 Excel 做项目管理的利与弊。&lt;/p&gt;

&lt;p&gt;要了解 Excel 管理项目的利与弊，得先了解如何用 Excel 来管理项目，Excel 能做什么，怎么做。项目管理，从本质上就是两件事情，计划安排和进度跟踪。计划安排包括计划和安排。计划是确定要做什么事情，并分解成一个个任务，比如在 Excel 里面按照 &lt;a href="http://www.baike.com/wiki/WBS"&gt;WBS&lt;/a&gt; 来做计划。而安排就是根据分解任务确定谁做什么事情以及什么时候做什么事情，比如在 Excel 里面制作&lt;a href="http://baike.baidu.com/view/1653.htm"&gt;甘特图&lt;/a&gt;来做安排。进度跟踪包括进度和跟踪。进度是了解项目的进展，哪些已经完成，哪些有待完成，比如可以在 Excel 里面绘制&lt;a href="http://baike.baidu.com/view/3798770.htm"&gt;燃尽图&lt;/a&gt;来展现进度。跟踪是及时了解团队每个人的状态，某个任务完成度如何了，这里更多的是通过沟通来更新到 Excel 中。&lt;/p&gt;

&lt;p&gt;关于具体可以怎么用 Excel 来做项目管理，我做了一个例子，在&lt;a href="https://fengcheco.com/blog/downloads/Excel-Project-Management.xlsx"&gt;这里&lt;/a&gt;下载，有兴趣可以参考，基本上涵盖了我上面提到的这些事情。&lt;/p&gt;

&lt;p&gt;Excel 不是专业的项目管理工具，但是 Excel 又无所不能。在我心目中，Windows 并不是微软最成功的软件，Office 才是。使用 Excel，有下面这几点好处。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;普及，群众基础扎实&lt;/strong&gt;。可以说，Office 在很多人眼里就等于电脑，你去外面配个电脑装个机都能在系统之外附赠一个 Office。这也带来了 Excel 基本上可...&lt;/li&gt;
&lt;/ol&gt;</summary>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;本文转载自&lt;a href="https://fengcheco.com/blog/use-excel-for-project-management/"&gt;风车官方博客&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果有人在市场上做个调查，目前使用最广泛的项目管理工具是啥，我估计结果不是  Microsoft Project，不是 Jira，不是 Redmine，而是 Excel。在做风车的过程中，接触到不少团队，包括一些跟互联网很近的技术创业公司，都在使用 Excel 管理项目，也有一些用户问我们如何能从 Excel 管理平滑地迁移过来。所以，风车在首页特别跟 Excel 做了对比，我们也的确有不少客户是从 Excel 管理转到风车。这篇文章就来谈谈用 Excel 做项目管理的利与弊。&lt;/p&gt;

&lt;p&gt;要了解 Excel 管理项目的利与弊，得先了解如何用 Excel 来管理项目，Excel 能做什么，怎么做。项目管理，从本质上就是两件事情，计划安排和进度跟踪。计划安排包括计划和安排。计划是确定要做什么事情，并分解成一个个任务，比如在 Excel 里面按照 &lt;a href="http://www.baike.com/wiki/WBS"&gt;WBS&lt;/a&gt; 来做计划。而安排就是根据分解任务确定谁做什么事情以及什么时候做什么事情，比如在 Excel 里面制作&lt;a href="http://baike.baidu.com/view/1653.htm"&gt;甘特图&lt;/a&gt;来做安排。进度跟踪包括进度和跟踪。进度是了解项目的进展，哪些已经完成，哪些有待完成，比如可以在 Excel 里面绘制&lt;a href="http://baike.baidu.com/view/3798770.htm"&gt;燃尽图&lt;/a&gt;来展现进度。跟踪是及时了解团队每个人的状态，某个任务完成度如何了，这里更多的是通过沟通来更新到 Excel 中。&lt;/p&gt;

&lt;p&gt;关于具体可以怎么用 Excel 来做项目管理，我做了一个例子，在&lt;a href="https://fengcheco.com/blog/downloads/Excel-Project-Management.xlsx"&gt;这里&lt;/a&gt;下载，有兴趣可以参考，基本上涵盖了我上面提到的这些事情。&lt;/p&gt;

&lt;p&gt;Excel 不是专业的项目管理工具，但是 Excel 又无所不能。在我心目中，Windows 并不是微软最成功的软件，Office 才是。使用 Excel，有下面这几点好处。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;普及，群众基础扎实&lt;/strong&gt;。可以说，Office 在很多人眼里就等于电脑，你去外面配个电脑装个机都能在系统之外附赠一个 Office。这也带来了 Excel 基本上可以捻手即来，不需要安装任何软件就可以使用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定制性强&lt;/strong&gt;。基于表格的任务属性，粒度可粗可细，根据团队的方法不同可任意调整，可说是 Excel 的最大优点。这也是很多团队喜欢 Excel 的最大原因，完全做到量身定制，不受到任何限制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;控制性强&lt;/strong&gt;。定制性强带来了一部分的控制性，但是控制性更多的体现在流程上。团队内部流程不需要任何调整就可以直接应用到 Excel 中，而且调整也非常容易，做到了管理者的真正掌控。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能丰富&lt;/strong&gt;。宏、函数、筛选、排序、作图等，Excel 的数据处理能力非常强大。Excel 的基本操作撑死也就 Excel 10% 的功能，大多数人只是学会了点皮毛，浪费了如此”好”的一款软件。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当然，用 Excel 管理项目的缺点也非常明显。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;复杂，非常复杂&lt;/strong&gt;。没有人能学会 Excel 所有的功能，只学会百分之二三十的功能就可以称为高手了。以前开过玩笑，微软开发 Excel 的团队也不会用 Excel。Excel 的学习成本是非常高的，见见世面上有多少 Excel/Office 的实用书籍就知道了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;维护非常耗时，自动化程度低&lt;/strong&gt;。即使你使用了宏和函数，还是需要很多人工的操作，比如任务拆分、甘特图的制作，都需要重排很多数据。现在很多用 Excel 管理项目的团队，会有专门一个助理来做这个事情，每天的工作就是维护 Excel。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进度跟踪不及时&lt;/strong&gt;。Excel 缺乏实时的信息更新，所以一般做法是每天开会确定一下昨天的进度，专人记录更新到 Excel 里面。这样子，有些问题就会被隐藏下去，无法及时发现，无法在正确的时间让正确的人去做正确的事。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;信息呈现单一，可用性不高&lt;/strong&gt;。Excel 毕竟只是表单数据处理软件，不是专业的项目管理软件，所以在呈现上没有信息架构可言，缺乏重点，用户体验差。同时，无法在上面做一些任务的沟通，项目管理过程被割裂成一块一块。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;成员间同步麻烦&lt;/strong&gt;。沟通的好坏，能否保证所有成员在一个节奏上，直接影响到项目的成败。然而用 Excel 管理项目的话，只能把文件传来传去，也不知道到底这个版本和上个版本有了哪些变化。高级点的会使用 Google Spreadsheet，但是有&lt;del&gt;伟大的墙&lt;/del&gt;的存在，还是诸多不爽。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;虽然项目管理中工具并不是最主要的，但是一个好的工具绝对能让事半功倍。如果说过往用 Excel 管理项目是因为专业的项目管理软件很昂贵，学习成本也很高，在此相比而言下 Excel 是一个尚且不错的选择的话，那么现在这个时代，已经有很多轻量级的项目管理工具可以使用，而且价格也非常合适。所以不妨跳出思维，去拥抱新的变化，体验技术创新带来的变革。&lt;/p&gt;

&lt;p&gt;如果你是 Excel 的老用户，可以非常简单的把 Excel 的概念映射到风车里面，比如 Excel 里面的每个工作表对应风车中的一个任务列表，工作表中的每一行数据代表风车里的一个任务，每一列数据对应风车中任务的某一个属性。对于列举的 Excel 的每个缺点，风车也做了相应的解决方案，并且会自动的提供项目报表和成员统计，项目管理从来没有这么轻松，并且不失专业。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;另外，作为一家有节操的公司，坚决抵制用数据绑架用户。所以你随时可以把风车项目内的数据导出成 Excel 保存，也会提供 API 让你随时读取数据。&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;你还在用 Excel 管理项目吗？是时候，使用风车保证所有信息的正确同步了！&lt;/strong&gt;&lt;br/&gt;
风车提供了清晰的任务管理体验，分配任务、进度跟踪一目了然。一处编辑、多处实时更新，保持团队成员步调一致，从而使任务管理轻松有序。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
  </entry>
  <entry>
    <title>What you should know before starting node-webkit</title>
    <link rel="alternate" href="/2014/08/01/node-webkit-intro-en.html"/>
    <id>/2014/08/01/node-webkit-intro-en.html</id>
    <published>2014-08-01T09:00:00+08:00</published>
    <updated>2014-08-01T09:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="node-webkit" src="http://yedingding.com/images/node-webkit-intro/nw.jpg"&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;blockquote&gt;
  This article is translated by &lt;a href="http://www.linkedin.com/in/yicunwu"&gt;Wendy&lt;/a&gt; of my article &lt;a href="http://yedingding.com/2014/07/28/node-webkit-intro.html"&gt;开始 NODE-WEBKIT 前，你应该知道的&lt;/a&gt;. &lt;a href="http://www.linkedin.com/in/yicunwu"&gt;Wendy&lt;/a&gt; now lives in Toronto, Canada and is looking to join a startup in US or Canada as backend developer to build innovative products that make people’s lives easier and more efficient. Her skills include Node.js, PHP, Python and C++. If you’re interested, why not &lt;a href="mailto:yicun.wu@uwaterloo.ca"&gt;drop her an email&lt;/a&gt;?
&lt;/blockquote&gt;

&lt;p&gt;Last weekend, &lt;a href="http://teahour.fm/2014/07/22/node-webkit-with-rogerwang.html"&gt;Teahour&lt;/a&gt; invited &lt;a href="https://twitter.com/wwr"&gt;Roger Wang&lt;/a&gt;, the creator of node-webkit to talk about the stories behind node-webkit and the use of HTML5 in desktop app development. Various web-based desktop app frameworks such as node-webkit, Chrome Apps, Titanium, TideSDK and Atom Shell have been developed over recent years and node-webkit remains one of the best.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/rogerwang/node-webkit"&gt;node-webkit&lt;/a&gt; project was started in 2011. It is an app runtime that allows...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="node-webkit" src="http://yedingding.com/images/node-webkit-intro/nw.jpg" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;blockquote&gt;
  This article is translated by &lt;a href="http://www.linkedin.com/in/yicunwu"&gt;Wendy&lt;/a&gt; of my article &lt;a href="http://yedingding.com/2014/07/28/node-webkit-intro.html"&gt;开始 NODE-WEBKIT 前，你应该知道的&lt;/a&gt;. &lt;a href="http://www.linkedin.com/in/yicunwu"&gt;Wendy&lt;/a&gt; now lives in Toronto, Canada and is looking to join a startup in US or Canada as backend developer to build innovative products that make people&amp;rsquo;s lives easier and more efficient. Her skills include Node.js, PHP, Python and C++. If you&amp;rsquo;re interested, why not &lt;a href="mailto:yicun.wu@uwaterloo.ca"&gt;drop her an email&lt;/a&gt;?
&lt;/blockquote&gt;

&lt;p&gt;Last weekend, &lt;a href="http://teahour.fm/2014/07/22/node-webkit-with-rogerwang.html"&gt;Teahour&lt;/a&gt; invited &lt;a href="https://twitter.com/wwr"&gt;Roger Wang&lt;/a&gt;, the creator of node-webkit to talk about the stories behind node-webkit and the use of HTML5 in desktop app development. Various web-based desktop app frameworks such as node-webkit, Chrome Apps, Titanium, TideSDK and Atom Shell have been developed over recent years and node-webkit remains one of the best.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://github.com/rogerwang/node-webkit"&gt;node-webkit&lt;/a&gt; project was started in 2011. It is an app runtime that allows developers to use Web technologies (i.e. HTML5, CSS and JavaScript) to develop native apps. As developers, we only need to maintain one codebase which can be compiled to Windows, Mac and Linux native apps. The node-webkit project currently has almost 15000 Stars and over 1600 Forks on GitHub and it&amp;rsquo;s a very popular open source project built by a Chinese developer. In the episode, Roger introduced the following common categories of apps using node-webkit:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Desktop IDEs such as &lt;a href="http://www.lighttable.com/"&gt;Light Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Games such as &lt;a href="http://www.brandonmustdie.com/"&gt;Brandon Must Die!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Media apps such as &lt;a href="http://popcorntime.io/"&gt;Popcorn Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tools such as &lt;a href="http://pad.haroopress.com/"&gt;Haroopod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enterprise apps such as metrics apps&lt;/li&gt;
&lt;li&gt;Terminals such as POS terminals&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We could see that the apps are diverse and there&amp;rsquo;s no lack of elegant apps. The full of imagination can be attributed to hardware performance improvements, developments of Web, animations, graphics, audios, videos, 2D, 3D, WebGl, etc.&lt;/p&gt;

&lt;p&gt;Essentially, node-webkit is only a web app runtime. When we talk about desktop apps, we think of GUI, responses to user actions and system-level interactions, so how did node-webkit manage to do that? In order to learn more about that, we need to first learn about Node and WebKit.&lt;/p&gt;

&lt;p&gt;Node is a lightweight JavaScript runtime based on the Google Chrome V8 engine. Node is written in C++ and lives in the operating-system application layer where it supports a lot of OS APIs such as file system and network operations therefore it can be used to build system and server-side apps.&lt;/p&gt;

&lt;p&gt;WebKit is a web browser engine. Let&amp;rsquo;s take a web page as an example: it&amp;rsquo;s built with HTML, CSS and JavaScript. After the page is loaded, it will be parsed into a tree and handed off to WebKit for rendering hence forming the page we see in a browser. Node-webkit is based on Blink, which is a rendering engine forked from WebKit and whose JavsScript engine is V8, which is also used in Node.&lt;/p&gt;

&lt;p&gt;The browser security model prevents WebKit from issuing system calls, which is a must-have for desktop applications; since Node itself has system-level APIs but lacks rendering support, Roger had the idea in 2011 to create node-webkit, combining system-level operations and user interactions. After some trials with WebKitGTK and Node, he started using Chromium in 2012, basing the project entirely on Chromium from the initial Chromium Embedded Framework (CEF).&lt;/p&gt;

&lt;p&gt;Following the fast development of Node and Chromium, node-webkit is at version 0.10 today. We&amp;rsquo;ll dive into the details of how node-webkit works.&lt;/p&gt;

&lt;p&gt;Node is an event-driven framework with message processing based on libuv. The JS engine of WebKit is based on MessagePump of Chrome, which is also event-driven. Event-driven can be explained as when an event happens, for example, user input comes in, the corresponding code is executed to process the event. Node-webkit combines the event-processing of Node and WebKit into a single message loop.&lt;/p&gt;

&lt;p&gt;We still have another challenge after combining event processing: we need to find a way for Node and WebKit to access the context of each other. There are two contexts in node-webkit: the Node context and the WebKit context. Accessing the context of each other means accessing the objects of each other, so during the initialization of node-webkit, the Node context will be injected into WebKit so that the WebKit context will have access to the Node context.&lt;/p&gt;

&lt;p&gt;Node-webkit has made changes to the security model of WebKit as well. In node-webkit, there are two kinds of frames: Node frames and normal frames&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;. If you&amp;rsquo;re familiar with Web development, you probably know that issuing a cross-domain AJAX request will result in errors imposed by &lt;a href="http://en.wikipedia.org/wiki/Same_origin_policy"&gt;same-origin policy&lt;/a&gt;. The same restriction is imposed on normal frames of node-webkit as in a browser. However, there is no such restriction on Node frames: the same security token is shared in all Node frames, including the Node&amp;rsquo;s context and the WebKit&amp;rsquo;s Context, and cross-domain access are allowed and objects in the Node&amp;rsquo;s context are accessible too. Therefore, app developers must take precaution with untrusted user input to prevent destructive actions or put them into a normal frame.&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="Chromium Layers" src="http://yedingding.com/images/node-webkit-intro/chromium-layers.jpg" /&gt;
  &lt;small&gt;Chromium Conceptual Application Layers&lt;/small&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;It is worth noting that even though Chrome supports HTML5 pretty well, some features are implemented on the Browser layer (see the graph above) and the WebKit in node-webkit inherits up to the Contents layer (i.e. the WebContents layer on the above image) as node-webkit itself is the implementation of the Browser layer. Therefore, some HTML5 features such as Web Notification&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt; are not supported in node-webkit. Nevertheless, the Chromium team is moving these HTML5 features onto the Content layer, which is definitely good news for node-webkit.&lt;/p&gt;

&lt;p&gt;If you look at the above graph carefully, you will find there is also UI rendering in the Browser layer. Node-webkit implements UI rendering in the same way: it has native UI component APIs such as Menu, System Tray, Clipboard etc. The implementation is inspired from the cross-platform UI of Chromium.&lt;/p&gt;

&lt;p&gt;The current version of node-webkit is 0.10.0, based on Node v0.11.13 and Chromium v35.0.1916.113. Node-webkit bases its major updates on Chromium versions, hence the 10 in 0.10.0. The version change corresponding to Node or node-webkit itself is the third part of the version number, e.g. the last 0 in 0.10.0.&lt;/p&gt;

&lt;p&gt;If you would like to learn more about node-webkit, you can listen to our &lt;a href="http://teahour.fm/2014/07/22/node-webkit-with-rogerwang.html"&gt;Teahour Episode&lt;/a&gt;. If you are tempted to develop a cross-platform desktop app, then the official &lt;a href="https://github.com/rogerwang/node-webkit/wiki"&gt;Wiki&lt;/a&gt; would definitely be a good place to start.&lt;/p&gt;

&lt;p&gt;&lt;span class="footnotes"&gt;
  Thank you again for the translation, Wendy. If anyone is interested, check out her &lt;a href="http://www.linkedin.com/in/yicunwu"&gt;linkedin&lt;/a&gt;. Wish you all the best in the job hunting.
&lt;/span&gt;&lt;/p&gt;

&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;Please refer to &lt;a href="https://github.com/rogerwang/node-webkit/wiki/Security"&gt;https://github.com/rogerwang/node-webkit/wiki/Security&lt;/a&gt; to learn more about the node-webkit security model and and how to use these two kinds of frames.&amp;nbsp;&lt;a href="#fnref1" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;Notification has been implemented by &lt;a href="https://github.com/rogerwang/node-webkit/pull/1951"&gt;PR&lt;/a&gt; and it&amp;rsquo;s already included in latest release 0.10.1.&amp;nbsp;&lt;a href="#fnref2" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>开始 node-webkit 前，你应该知道的</title>
    <link rel="alternate" href="/2014/07/28/node-webkit-intro.html"/>
    <id>/2014/07/28/node-webkit-intro.html</id>
    <published>2014-07-28T12:00:00+08:00</published>
    <updated>2014-07-28T12:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="node-webkit" src="/images/node-webkit-intro/nw.jpg?1406554637"&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上周末在 &lt;a href="http://teahour.fm/2014/07/22/node-webkit-with-rogerwang.html"&gt;Teahour&lt;/a&gt; 邀请到了 node-webkit 的作者&lt;a href="https://twitter.com/wwr"&gt;王文睿&lt;/a&gt;来做客，聊了一下 node-webkit 的故事和 HTML5 技术在应用程序开发领域的发展，很有收获。最近几年，用 Web 技术来开发应用程序的框架层出不穷，如 node-webkit, Chrome Apps, Titanium, TideSDK, Atom Shell，而 node-webkit 正是这些框架中的一个佼佼者。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/rogerwang/node-webkit"&gt;node-webkit&lt;/a&gt; 这个项目开始于 2011 年，是一个让开发者可以用 Web 技术，也就是 HTML5、CSS 和 JavaScript 来编写桌面程序的应用框架。作为开发者，我们只需要写一份代码，就能编译成跑在 Windows、Mac 和 Linux 下的应用程序。目前在 github 上，node-webkit 有将近 15000 个 Star，1600 个 Fork，可以说是由国人开发的一个非常流行的开源软件。在本期节目中，文睿介绍了目前使用 node-webkit 开发的一些典型应用，大致可以分成这么几类，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;桌面开发 IDE，比如 &lt;a href="http://www.lighttable.com/"&gt;Light Table&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;游戏，比如 &lt;a href="http://www.brandonmustdie.com/"&gt;Brandon Must Die!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;媒体类应用，比如 &lt;a href="http://popcorntime.io/"&gt;Popcorn Time&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;工具软件，比如 &lt;a href="http://pad.haroopress.com/"&gt;Haroopod&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;企业内部应用，比如数据显示应用&lt;/li&gt;
&lt;li&gt;终端应用，比如 POS 机。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以看出，领域非常丰富，其中也不乏一些设计精良体验优美的应用。可以说，很大程度上，这得益于目前硬件的性能提升和 Web 的发展，动画、图形、音频、视频、2D、3D、WebGL 等等，都让基于 HTML5 的应用开发充满了想象力。&lt;/p&gt;

&lt;p&gt;从本质上来说，node-webkit 只是一个 web 应用的桌面运行环境。当我们说到桌面应用的时候，我们会想到需要有呈现给用户的界面，也需要能响应用户行为，跟系统打交道...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="node-webkit" src="http://yedingding.com/images/node-webkit-intro/nw.jpg?1406554637" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上周末在 &lt;a href="http://teahour.fm/2014/07/22/node-webkit-with-rogerwang.html"&gt;Teahour&lt;/a&gt; 邀请到了 node-webkit 的作者&lt;a href="https://twitter.com/wwr"&gt;王文睿&lt;/a&gt;来做客，聊了一下 node-webkit 的故事和 HTML5 技术在应用程序开发领域的发展，很有收获。最近几年，用 Web 技术来开发应用程序的框架层出不穷，如 node-webkit, Chrome Apps, Titanium, TideSDK, Atom Shell，而 node-webkit 正是这些框架中的一个佼佼者。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/rogerwang/node-webkit"&gt;node-webkit&lt;/a&gt; 这个项目开始于 2011 年，是一个让开发者可以用 Web 技术，也就是 HTML5、CSS 和 JavaScript 来编写桌面程序的应用框架。作为开发者，我们只需要写一份代码，就能编译成跑在 Windows、Mac 和 Linux 下的应用程序。目前在 github 上，node-webkit 有将近 15000 个 Star，1600 个 Fork，可以说是由国人开发的一个非常流行的开源软件。在本期节目中，文睿介绍了目前使用 node-webkit 开发的一些典型应用，大致可以分成这么几类，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;桌面开发 IDE，比如 &lt;a href="http://www.lighttable.com/"&gt;Light Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;游戏，比如 &lt;a href="http://www.brandonmustdie.com/"&gt;Brandon Must Die!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;媒体类应用，比如 &lt;a href="http://popcorntime.io/"&gt;Popcorn Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;工具软件，比如 &lt;a href="http://pad.haroopress.com/"&gt;Haroopod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;企业内部应用，比如数据显示应用&lt;/li&gt;
&lt;li&gt;终端应用，比如 POS 机。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以看出，领域非常丰富，其中也不乏一些设计精良体验优美的应用。可以说，很大程度上，这得益于目前硬件的性能提升和 Web 的发展，动画、图形、音频、视频、2D、3D、WebGL 等等，都让基于 HTML5 的应用开发充满了想象力。&lt;/p&gt;

&lt;p&gt;从本质上来说，node-webkit 只是一个 web 应用的桌面运行环境。当我们说到桌面应用的时候，我们会想到需要有呈现给用户的界面，也需要能响应用户行为，跟系统打交道。那么，node-webkit 是怎么做到这点的。要了解这个，必须得先了解 node 和 webkit。&lt;/p&gt;

&lt;p&gt;Node 是一个基于 Google Chrome V8 引擎的轻量级 Javascript 运行平台。Node 采用 C++ 编写，直接在操作系统的应用层上，支持很多系统级的 API，如文件操作、网络编程等，所以可以用来编写系统级应用或者服务端应用等。&lt;/p&gt;

&lt;p&gt;Webkit 是 Web 内容的渲染引擎。举个例子，一个网页由 HTML、CSS 和 JavaScript 组成，页面加载后会被语法分析器解析成树，然后交由 Webkit 做渲染，这样才得到一个我们看到的页面。在 node-webkit 里，选择了是基于 Webkit 二次开发的 Blink 引擎，正好其 JavaScript 解析引擎也是 node 所采用的 V8 引擎。&lt;/p&gt;

&lt;p&gt;由于浏览器安全模型的缘故，Webkit 并不能访问到系统调用，而这却是桌面应用的必须。Node 本身支持系统级的 API，但是缺乏对于渲染的支持，所以文睿在 2011 就有了做 node-webkit 的想法，把两者揉合在一起，既能对接操作系统，又能提供用户交互。在做简单尝试用 webkit-gtk 和 node 来做实验后，在 2012 年开始转向 Chromium，从一开始使用的 Chromium Embeded Framework（CEF）到后面完全基于 Chromium。&lt;/p&gt;

&lt;p&gt;得益于 Node 和 Chromium 自身的蓬勃发展，node-webkit 也发展的很快，到今天已经发布到了 0.10 版本。下面来讲讲 node-webkit 的一些主要实现细节。&lt;/p&gt;

&lt;p&gt;Node 是一个事件驱动的框架，消息处理基于 libuv 实现。Webkit 的 JS 引擎也是事件驱动的，是 Chrome 自己实现的 MessagePump。所谓事件驱动，简单说就是当某个事件发生的时候，比如有用户输入进来，去执行对应的处理代码。 所以，node-webkit 统一了 node 和 webkit 中的事件处理方式，在一个消息循环中去处理 node 里和 webkit 里的不同事件。&lt;/p&gt;

&lt;p&gt;解决了事件处理统一的问题后，node 和 webkit 的揉合还需要互相能访问。node-webkit 里面存在着两个 context，node context 和 webkit context，互相访问也就是 Context 能互通，访问各自的对象。所以在 node-webkit 初始化的时候，node context 会被注入到 WebKit 里面。之后，Webkit context 就可以访问到 node context 了。&lt;/p&gt;

&lt;p&gt;同时，node-webkit 对 Webkit 的安全模型也做了一些修改。在 node-webkit 中，有两种不同的 frames，node frame 和 normal frame&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;。熟悉 Web 开发的朋友应该知道，对不同的站点发起一个 AJAX 请求会返回跨域错误，也就是 &lt;a href="http://en.wikipedia.org/wiki/Same_origin_policy"&gt;Same-origin Policy&lt;/a&gt;。node-webkit 中的 normal frame，跟浏览器中的一样，仍然有这个限制。但是在 node frame 中，将不再有这个限制，所有的 node frame 中共享同一个 security token，包括 node context
和 webkit context，跨域访问被允许，也就能访问到 node context 中的对象。所以作为应用开发者，对于不受信任的用户行为输入一定要做保护，防止因为这个造成一些破坏性行为，或者放入 normal frame 中。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="Chromium Layers" src="http://yedingding.com/images/node-webkit-intro/chromium-layers.jpg?1406554637" /&gt;
  &lt;small&gt;Chromium Conceptual Application Layers&lt;/small&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;值得注意的是，尽管 Chrome 本身对于 HTML5 的支持已经比较完备了，但是有些特性是在浏览器层即上图的 Browser 实现，而 node-webkit 中 webkit 只到了 Content Layer 即上图的 WebContent，node-webkit 本身的实现等于浏览器层。所以，node-webkit 对于一些 HTML5 特性还缺乏支持，比如 Web Notification&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;。不过，目前 Chromium 团队正在把这些 HTML5 特性的支持解耦移动到 Content Layer，这个对于 node-webkit 来说绝对是个非常好的消息。&lt;/p&gt;

&lt;p&gt;如果你细心的看上图的话，你会发现浏览器层还有 UI 绘制部分。node-webkit 也是一样，实现了直接绘制原生 UI 控件的 API，比如菜单、系统托盘、剪贴板等。这部分实现，的确也是主要参考了 Chromium 的跨平台 UI 实现。&lt;/p&gt;

&lt;p&gt;目前 node-webkit 的正式版是 0.10.0，基于 Node v0.11.13 和 Chromium 35.0.1916.113。node-webkit 的大版本更新策略是跟着 Chromium 的版本升级而升级，比如 0.10.0 中的 10。如果 node-webkit 本身有更新或者 node 版本有更新，对应升级的是第三个数字，也就是 0.10.0 中的最后一个 0。&lt;/p&gt;

&lt;p&gt;如果你想了解最多 node-webkit 的信息，可以听听我们这期 &lt;a href="http://teahour.fm/2014/07/22/node-webkit-with-rogerwang.html"&gt;Teahour 节目&lt;/a&gt;。如果你想开发跨平台的桌面应用，那么官方的 &lt;a href="https://github.com/rogerwang/node-webkit/wiki"&gt;Wiki&lt;/a&gt; 绝对是个很好的开始。&lt;/p&gt;

&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;对于 node-webkit 的安全模型，具体可以参考 &lt;a href="https://github.com/rogerwang/node-webkit/wiki/Security"&gt;https://github.com/rogerwang/node-webkit/wiki/Security&lt;/a&gt;, 了解如何使用这两种不同的 Frame。&amp;nbsp;&lt;a href="#fnref1" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;目前已经有 &lt;a href="https://github.com/rogerwang/node-webkit/pull/1951"&gt;PR&lt;/a&gt; 实现了 Notification，相信不久会在 node-webkit 正式版中被支持。&amp;nbsp;&lt;a href="#fnref2" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>Deliver Better Product (I)</title>
    <link rel="alternate" href="/2014/07/09/deliver-better-product-i.html"/>
    <id>/2014/07/09/deliver-better-product-i.html</id>
    <published>2014-07-09T12:00:00+08:00</published>
    <updated>2014-07-09T12:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Most Products Fail!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;是的，大多数的产品都会死掉，一个黑暗的事实。就如很多人认为现在团队协作工具出来这么多，很不看好风车一样。但是就如风车诞生的初衷一样，我们希望风车能够帮助创业团队更好的成长，更快地发布更好的产品，很欣慰现在风车真的帮助到了不少产品团队，让我能更有动力去改进产品和提供更好的服务。之所以我相信风车能真正帮到用户发布更好的产品，是因为我坚信对于一个创业团队来说，采用正确的做事方式和合适的工具能大大降低失败几率。&lt;/p&gt;

&lt;p&gt;一个产品的成功，也许需要天时地利人和&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;，但是要做到不失败相对就容易的多了。我想分享一些我们做事的方式，希望能帮助到你。这里没有互联网思维，这里没有成功学，有的只是真正的工作实践心得，甚至有些也许都是很笨的，但是希望这些分享能给你带来一点点的启发，并且还能付诸于实践。&lt;/p&gt;

&lt;p&gt;&lt;aside class="“aside”"&gt;
  &lt;img alt="Scrum Roles" src="/images/deliver-better-product-i/KnibergRoles.jpg?1404985052"&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上图是对 Scrum 敏捷方法不同角色的职责的很好诠释，即使是对于不采用 Scrum 的团队来说，我们也应该这样去做产品。做正确的事情，正确的做事情，并且快速的做事情，这样一个团队，最佳情况就是总是能在正确的时间用正确的方法做正确的事，非常完美。对于这个系列的计划，我希望能涵盖产品的整个生命线。本文开篇，主要介绍如何做产品远景和形态探索，后面的文章会涉及如何做用户角色分析，如何做用户故事、如何做计划评估、如果做迭代计划、如何协作执行、如何做回顾测试、如何做用户访谈等&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Great Product starts with Vision&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;正如我在&lt;a href="http://yedingding.com/2014/06/17/know-your-consumers.html"&gt;「你是否关注过消费者心理？」&lt;/a&gt; 所写，优秀的市场营销者，会先去传递产品的使命，然后才是与使命匹配的具体需求实现。对外如此，对内同样需要如此，不然团队事情会做的很茫然。为什么我们要做这个功能，为什么我们不做那个功能？为什么我们现在需要做这个，而不是那个？回忆一下，曾经你有没有问过自己这些问题，为什么会...&lt;/p&gt;</summary>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Most Products Fail!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;是的，大多数的产品都会死掉，一个黑暗的事实。就如很多人认为现在团队协作工具出来这么多，很不看好风车一样。但是就如风车诞生的初衷一样，我们希望风车能够帮助创业团队更好的成长，更快地发布更好的产品，很欣慰现在风车真的帮助到了不少产品团队，让我能更有动力去改进产品和提供更好的服务。之所以我相信风车能真正帮到用户发布更好的产品，是因为我坚信对于一个创业团队来说，采用正确的做事方式和合适的工具能大大降低失败几率。&lt;/p&gt;

&lt;p&gt;一个产品的成功，也许需要天时地利人和&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;，但是要做到不失败相对就容易的多了。我想分享一些我们做事的方式，希望能帮助到你。这里没有互联网思维，这里没有成功学，有的只是真正的工作实践心得，甚至有些也许都是很笨的，但是希望这些分享能给你带来一点点的启发，并且还能付诸于实践。&lt;/p&gt;

&lt;p&gt;&lt;aside class=“aside”&gt;
  &lt;img alt="Scrum Roles" src="http://yedingding.com/images/deliver-better-product-i/KnibergRoles.jpg?1404985052" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上图是对 Scrum 敏捷方法不同角色的职责的很好诠释，即使是对于不采用 Scrum 的团队来说，我们也应该这样去做产品。做正确的事情，正确的做事情，并且快速的做事情，这样一个团队，最佳情况就是总是能在正确的时间用正确的方法做正确的事，非常完美。对于这个系列的计划，我希望能涵盖产品的整个生命线。本文开篇，主要介绍如何做产品远景和形态探索，后面的文章会涉及如何做用户角色分析，如何做用户故事、如何做计划评估、如果做迭代计划、如何协作执行、如何做回顾测试、如何做用户访谈等&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Great Product starts with Vision&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;正如我在&lt;a href="http://yedingding.com/2014/06/17/know-your-consumers.html"&gt;「你是否关注过消费者心理？」&lt;/a&gt; 所写，优秀的市场营销者，会先去传递产品的使命，然后才是与使命匹配的具体需求实现。对外如此，对内同样需要如此，不然团队事情会做的很茫然。为什么我们要做这个功能，为什么我们不做那个功能？为什么我们现在需要做这个，而不是那个？回忆一下，曾经你有没有问过自己这些问题，为什么会问这些问题。究其原因，其实是产品的使命和远景缺乏透明，或者不够简单和清晰，最终导致了执行层面的混乱。用句最近流行的话来讲，『你不要用战术的勤奋来掩盖战略的懒惰』，不要去逃避寻找远景这个答案。只有有了产品远景，后面的路才能走得顺，不然相信我，出来混，迟早是要还的。&lt;/p&gt;

&lt;p&gt;&lt;aside class=“aside”&gt;
  &lt;img alt="Vision" src="http://yedingding.com/images/deliver-better-product-i/vision.jpg?1404985052" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;那么，应该如何才能定出一个好的产品远景呢？作为一个创业者，我们时常被要求用一句话来描述清楚产品，远景也应该如此。经典的 30 秒电梯游说就非常适合用来做产品远景测试，&lt;/p&gt;

&lt;blockquote&gt;
&lt;b&gt;For&lt;/b&gt; (target customer)&lt;br/&gt;
&lt;b&gt;Who&lt;/b&gt; (statement of the need or opportunity)&lt;br/&gt;
&lt;b&gt;The&lt;/b&gt; (product name) &lt;b&gt;is a&lt;/b&gt; (product category)&lt;br/&gt;
&lt;b&gt;That&lt;/b&gt; (key benefit, compelling reason to buy)&lt;br/&gt;
&lt;b&gt;Unlike&lt;/b&gt; (primary competitive alternative)&lt;br/&gt;
&lt;b&gt;Our product&lt;/b&gt; (statement of primary differentiation)&lt;br/&gt;
&lt;/blockquote&gt;

&lt;p&gt;具体来说，就是产品做给谁、解决什么需求，产品是什么、核心价值是啥，跟竞争对手相比区别主要在哪。简单的 30 秒，但是这个定义过程需要做很多功课，非常耗时，但是如果能一口气讲清楚并且还能让人两眼发光，那么你就有了一个简单清晰而且还令人振奋的产品远景，也就有了一个好的开始。现在坐下来，好好思考一下，针对你的产品去填上那些括号里的内容，就像我对风车的远景定义。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;b&gt;For&lt;/b&gt; 创业团队&lt;br/&gt;
  &lt;b&gt;Who&lt;/b&gt; 想更好的成长&lt;br/&gt;
  &lt;b&gt;The&lt;/b&gt; 风车 &lt;b&gt;是一个&lt;/b&gt; 团队协作工具&lt;br/&gt;
  &lt;b&gt;That&lt;/b&gt; 以任务管理为基础，提供简洁纯净的工作空间，帮助团队节省大量时间和资源去做真正要做的事&lt;br/&gt;
  &lt;b&gt;Unlike&lt;/b&gt; Jira、Basecamp、Trello、Email 和 Excel&lt;br/&gt;
  &lt;b&gt;Our product&lt;/b&gt; 专注于任务进度掌控和高效执行，信息合理有效地组织起来，真正做到简单、轻量和高效的平衡。&lt;br/&gt;
&lt;/blockquote&gt;

&lt;p&gt;转换成中文习惯就是『风车是一款以任务管理为基础，提供简洁纯净的工作空间的团队协作工具，让创业团队能节省大量的时间和资源做真正重要的事情，更好的成长。不像 Jira、Basecamp、Trello、Email 或 Excel，风车更专注于任务的进度掌控和高效执行，信息合理有效地组织起来，真正做到简单、轻量和高效的平衡』。&lt;/p&gt;

&lt;p&gt;当有了这个远景以后，我们就应该围绕着这个远景去定义产品形态，设计出一个用户想用、用户知道怎么用并且可以做出来的产品&lt;sup id="fnref3"&gt;&lt;a href="#fn3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;。这个过程，需要整个团队一起参与和努力，更需要相互信任和尊重，以远景为中心，多从用户的角度出发和思考，慢慢聚拢收窄需求，最终的的目标是寻找到最小可行产品，用最小成本去做测试，看看我们是不是在正确的方向上。&lt;/p&gt;

&lt;p&gt;&lt;aside class=“aside”&gt;
  &lt;img alt="Discovery" src="http://yedingding.com/images/deliver-better-product-i/discovery.jpg?1404985052" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;MVP 的确定，绝对不是一蹴而就，而是需要一段时间的反复探索、试错和纠正，有时甚至需要原型的辅助测试。所以，在探索的过程中，我们需要不同时刻带不同的帽子。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;学会带最终用户的帽子。忘掉自己的知识背景，去思考如果自己是最终用户，会希望是什么样子的，尽可能的抛掉主观因素。&lt;/li&gt;
&lt;li&gt;学会带用户支持的帽子。去聆听用户的声音，他遇到了什么问题，他希望看到什么结果。即使是他要一辆更快的马车&lt;sup id="fnref4"&gt;&lt;a href="#fn4" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;，对于我们来说也是知道他的问题是嫌弃速度不够快。&lt;/li&gt;
&lt;li&gt;学会带产品经理的帽子。用户声音中存在着很多噪音，用户也并不清楚自己需要什么，所以我们需要从众多的用户反馈和建议中挖掘出用户的真正潜在需求并给出可行解决方案。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;产品形态的定义过程，是一个从具象到抽象，再从抽象回到具象的过程。这个过程，依赖于对问题的深刻理解，也借助于用户行为测试和数据分析。 实际项目中，总会有很纠结的时候，听上去这个客户提的意见有道理，那个客户提的也有道理，我们该如何做决策？这个时候就需要依托于我们在前面定义的远景，通过做用户角色分析，来让我们专注在最重要的事情上。这将在本系列文章（II）里面介绍。&lt;/p&gt;

&lt;p&gt;在（I）的最后，再次重申，无论你的设计团队技术团队运营团队销售团队有多强，如果一开始设计出的不是一个用户想用且会用的产品，那么最终产品还是会走向失败。所以，从现在开始透明化你的产品远景，让团队每个成员都清楚知道前进的目标，这，真的很重要。&lt;/p&gt;

&lt;p&gt;读到这里，你有什么想法吗，欢迎大家留言讨论，谢谢!&lt;/p&gt;

&lt;p&gt;PS：上个月在杭州参加了吕毅的 CSPO 课程，有理论有实践，很有收获，推荐给产品经理或者创业者。如果你想了解吕毅和他的课程介绍，可以看&lt;a href="http://www.scrumalliance.org/community/profile/ylv"&gt;这里&lt;/a&gt;，9 月份在杭州也有一次课。&lt;/p&gt;

&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;个人认为天时地理人和对应站在风口上，进入合适的市场和有一只强大的团队，当然这得有一些运气。&amp;nbsp;&lt;a href="#fnref1" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;我得承认系列文章是很容易太监了，希望能多得到大家反馈和鼓励，希望不至于被批的太惨而心灰意冷，:)&amp;nbsp;&lt;a href="#fnref2" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;Valuable - 对用户有价值，用户想用；Usable - 用户知道怎么用；Feasible - 技术可以实现的。&amp;nbsp;&lt;a href="#fnref3" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn4"&gt;
&lt;p&gt;“If I had asked people what they wanted, they would have said faster horses.” - Henry Ford, the founder of the Ford Motor Company&amp;nbsp;&lt;a href="#fnref4" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>微信企业号，Do or Die?</title>
    <link rel="alternate" href="/2014/07/03/wechat-enterprise-challenge.html"/>
    <id>/2014/07/03/wechat-enterprise-challenge.html</id>
    <published>2014-07-03T20:00:00+08:00</published>
    <updated>2014-07-03T20:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;img alt="WeChat" src="/images/wechat-enterprise-challenge/wechat-645x250.jpg?1404392414"&gt;&lt;/p&gt;

&lt;p&gt;对于一位在企业服务领域的创业者来说，最近几天最具有爆炸力的新闻莫如是微信继公众号、服务号之后，即将推出企业号，旨在连接人和企业。一时间，媒体、企业、创业者，都开始思考着各种可能性，到底企业号最后会是以什么形态出现，对于目前不瘟不火的企业服务市场又将会带来什么样的变化。&lt;/p&gt;

&lt;p&gt;“如果腾讯抄你们或者进入这个市场，你们会怎么办？”这是国内的 VC 们很喜欢问的一个问题。而现在腾讯是实实在在的进入了。腾讯的进入，对于像风车这样的标准化 SaaS 团队协作服务来说，到底会是一个机遇，还是一个灭顶之灾呢？&lt;/p&gt;

&lt;p&gt;从第一天知道这个消息的时候，我一直都是觉得这是一个好事，我非常乐于看到微信进入这个市场。不管我们承不承认，微信现在已经实实在在的渗透到了企业内部，使用粘度之高简直令人发指。如果在任何一个企业做一个调查，统计使用时间最多的办公软件，我相信微信都跳不出前三，即使它定位不在办公。公司员工之间在用微信沟通，公司客户之间在用微信沟通，创业者投资人之间也用微信在沟通，所以微信进入这个市场的时机已然成熟。&lt;/p&gt;

&lt;p&gt;那么，这个特殊的企业号能做什么？让我们先来看看服务号和公众号能做什么。风车目前在开发服务号，基本功能也是一些简单的快速任务入口和项目动态通知提醒，再在其上是提供服务信息和客服。这里最大的问题是服务号连接的是企业里的个人和企业服务提供商，而不是企业本身和企业服务提供商。如果我们要做到后者，就需要企业自身去申请服务号，然后跟风车做对接。而这，从传言来看，就是微信即将推出的企业号，唯一不同的是由微信来制定标准接口，类似苹果的应用商店，规定应用接入的规范，而风车只需要作为其中一个应用接入即可，事情将简单很多。而因此，企业也从多应用入口变成一个企业号入口。&lt;/p&gt;

&lt;p&gt;微信企业号的最大价值，在我看来主要是两点，不是它能做微信打卡，也不是它能做微信报销等，而是它解决了企业的两大基本问题，一是统一了账号系统，...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;img alt="WeChat" src="http://yedingding.com/images/wechat-enterprise-challenge/wechat-645x250.jpg?1404392414" /&gt;&lt;/p&gt;

&lt;p&gt;对于一位在企业服务领域的创业者来说，最近几天最具有爆炸力的新闻莫如是微信继公众号、服务号之后，即将推出企业号，旨在连接人和企业。一时间，媒体、企业、创业者，都开始思考着各种可能性，到底企业号最后会是以什么形态出现，对于目前不瘟不火的企业服务市场又将会带来什么样的变化。&lt;/p&gt;

&lt;p&gt;“如果腾讯抄你们或者进入这个市场，你们会怎么办？”这是国内的 VC 们很喜欢问的一个问题。而现在腾讯是实实在在的进入了。腾讯的进入，对于像风车这样的标准化 SaaS 团队协作服务来说，到底会是一个机遇，还是一个灭顶之灾呢？&lt;/p&gt;

&lt;p&gt;从第一天知道这个消息的时候，我一直都是觉得这是一个好事，我非常乐于看到微信进入这个市场。不管我们承不承认，微信现在已经实实在在的渗透到了企业内部，使用粘度之高简直令人发指。如果在任何一个企业做一个调查，统计使用时间最多的办公软件，我相信微信都跳不出前三，即使它定位不在办公。公司员工之间在用微信沟通，公司客户之间在用微信沟通，创业者投资人之间也用微信在沟通，所以微信进入这个市场的时机已然成熟。&lt;/p&gt;

&lt;p&gt;那么，这个特殊的企业号能做什么？让我们先来看看服务号和公众号能做什么。风车目前在开发服务号，基本功能也是一些简单的快速任务入口和项目动态通知提醒，再在其上是提供服务信息和客服。这里最大的问题是服务号连接的是企业里的个人和企业服务提供商，而不是企业本身和企业服务提供商。如果我们要做到后者，就需要企业自身去申请服务号，然后跟风车做对接。而这，从传言来看，就是微信即将推出的企业号，唯一不同的是由微信来制定标准接口，类似苹果的应用商店，规定应用接入的规范，而风车只需要作为其中一个应用接入即可，事情将简单很多。而因此，企业也从多应用入口变成一个企业号入口。&lt;/p&gt;

&lt;p&gt;微信企业号的最大价值，在我看来主要是两点，不是它能做微信打卡，也不是它能做微信报销等，而是它解决了企业的两大基本问题，一是统一了账号系统，二是提供了工作入口。&lt;/p&gt;

&lt;p&gt;一个企业内部会使用到很多不同的应用，每个应用都可能会有其自成一套的用户系统，对于企业来说很是头疼。标准化登陆系统是有，比如 &lt;a href="http://en.wikipedia.org/wiki/LDAP"&gt;LDAP&lt;/a&gt;、&lt;a href="http://en.wikipedia.org/wiki/Saml"&gt;SAML&lt;/a&gt;、&lt;a href="http://www.ca.com/us/securecenter/ca-siteminder.aspx"&gt;Siteminder&lt;/a&gt; 或者 &lt;a href="http://en.wikipedia.org/wiki/Kerberos_(protocol)"&gt;Kerberos&lt;/a&gt; 这些 SSO 方案，但是一来小企业很少有能力上这种方案，二来非标准化下不同的企业有他自己的方案，每个都支持对于创业团队来说非常麻烦，所以员工账号系统的统一管理对于企业来说一直是个很大的痛点。但是，如果创业团队专门去做一个员工账号系统的服务，又会面临无人对接的困境，阻力大大。所以，微信的推出，一定程度上可以解决这个问题，企业服务只需要对接微信账号系统就可，而微信也控制了这个最最基本却又非常重要的员工入口。&lt;/p&gt;

&lt;p&gt;如果说企业里面有什么服务是必需品，那非沟通服务莫属。也许你们不用风车这样的任务管理工具，但是你一定会用微信这样的沟通工具；也许你们不用印象笔记这样的知识管理工具，但是你一定会用微信这样的沟通工具；也许你们不用 Yammer 这样的社交管理工具，但是你一定会用微信这样的沟通工具。沟通工具非常适合做企业工作的入口，来汇总分散在各地的信息。比如对于风车团队来说，我们使用 HipChat，里面会汇总我们在 BitBucket 上的代码提交信息，在 UserVoice 上的用户支持信息，我们的部署通知系统消息，我们的集成测试信息，我们的任务管理消息等等。沟通工具仍是沟通工具，我们不用它来当任务管理用，也不当知识管理用，但是它天然就是很好的信息聚合系统，也是员工可能一天在线最长的应用。这段时间国外大红大紫的 Slack&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; 便是同样的概念。&lt;/p&gt;

&lt;p&gt;所以，从上面两点来说，我觉得微信企业号的出现，对于企业服务创业者来说，更多的是机遇，而不是挑战。它非但不会压缩企业服务提供商的生存空间，而且会开放平台给企业开发者，可以让大家共同来构建生态圈，对于微信、企业和创业者来说都是三方共赢的好事。同时，因为腾讯的介入，对于创业者来说，企业服务市场的教育成本会大大降低。这一次，&lt;strong&gt;微信连接人和企业&lt;/strong&gt;&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;目前对微信企业号的最大质疑在于员工不想与企业分享微信号，员工抗拒在微信中使用企业应用，因为&lt;del&gt;还让不让人下班了&lt;/del&gt;。姑且不说现在有些人就是用两个微信号的，一个加公司同事，另一个用来加个人朋友，单单说质疑微信企业号会造成员工压榨的情况，我只能说：“妈蛋，搞得好像没有微信企业号就不加班似的。看我口型，跟我喊，『用风车，不加班』，『用风车，不加班』。” 唉，讨厌，搞得我跟传销似的，敏捷宣言&lt;sup id="fnref3"&gt;&lt;a href="#fn3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;第一句，『个体和互动高于流程和工具』，尊重个体，加强团队之间的互动，然后才是合适的流程和相配合的工具。真用好了，我相信微信企业号及其生态圈可以成为中小企业成长的一把屠龙刀。&lt;/p&gt;

&lt;p&gt;你怎么看微信企业号，你们现在有用微信在做一些工作上的事情吗？欢迎留言交流。&lt;/p&gt;

&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;&lt;a href="https://slack.com"&gt;Slack&lt;/a&gt; 是国外新进最火的企业沟通工具，没有之一，我不是他的用户，但是他的很多东西让我眼前一亮，后面专门写篇文章分析。&amp;nbsp;&lt;a href="#fnref1" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;封闭不开放是腾讯一直的尿性，希望这次微信不要让我们失望&amp;hellip;.&amp;nbsp;&lt;a href="#fnref2" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;敏捷宣言中文版见&lt;a href="http://agilemanifesto.org/iso/zhchs/"&gt;这里&lt;/a&gt;&amp;nbsp;&lt;a href="#fnref3" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>Write the code. Change the world.</title>
    <link rel="alternate" href="/2014/06/24/write-the-code-change-the-world.html"/>
    <id>/2014/06/24/write-the-code-change-the-world.html</id>
    <published>2014-06-24T08:00:00+08:00</published>
    <updated>2014-06-24T08:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="WWDC 2014" src="/images/write-the-code-change-the-world/WWDC14.png?1403585998" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Write the Code. Change the world.&amp;rdquo;, 这个标题是苹果这个月的 WWDC 上的宣传语，看得我很激动，也相信每一个耐不住寂寞的开发者内心里都会有这样的冲动。最近一两年间，越来越多的人开始把编码能力跟读写能力做比较，呼吁每个人都应该去学习编程序，认为这是以后每个人都需要掌握的基础技能。与之同时，黑客马拉松在国内也迅速的火起来，参加过几次，跟一群年轻人聚集在一起，交流想法并付诸于实践，在一个周末完成一个作品，每每想起都是段非常愉悦的经历。&lt;/p&gt;

&lt;p&gt;六一应 &lt;a href="http://segmentfault.com"&gt;SegmentFault&lt;/a&gt;&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; 高阳邀请，在其两周年黑客马拉松活动中作为技术创业者的代表，做一个分享。虽然作为创业者分享经验很不够格，不过这两年做风车下来也的确有一些想法，另外通过 &lt;a href="http://teahour.fm"&gt;Teahour&lt;/a&gt; 从不少创业者那里学到了很多，所以也就在活动上做了一次简短的即兴演讲，刚好跟 『Write the Code. Change the world』有点关联。&lt;/p&gt;

&lt;p&gt;SegmentFault 的使命是『创造属于开发者的时代』，我个人很喜欢这个远景，很美好。作为开发者，处在现在这个时代，我们是幸运的。我记得我 06 年的时候第一次跟朋友创业做互联网产品，当时什么东西都要自己去管，比如要自己买服务器、找 IDC 托管、产品开发中如果需要用什么服务都要自己做，真的是很讨厌，既浪费时间又浪费精力。而现在呢，相比较起来我们去制作一个产品的成本已经很低了，一个团队，三个月时间迅速开发原型，云主机用 UCloud 之类，文件存储用又拍云，发邮件用 SendCloud，还有各种开放平台等等。所以，作为一个开发者，作为一个会写代码的人&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;，我们有个很大的优势，就是就算整个世界抛弃了你，你还是能一个人去把产品开发出来，启动成本很低。&lt;/p&gt;

&lt;p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="WWDC 2014" src="http://yedingding.com/images/write-the-code-change-the-world/WWDC14.png?1403585998" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Write the Code. Change the world.&amp;rdquo;, 这个标题是苹果这个月的 WWDC 上的宣传语，看得我很激动，也相信每一个耐不住寂寞的开发者内心里都会有这样的冲动。最近一两年间，越来越多的人开始把编码能力跟读写能力做比较，呼吁每个人都应该去学习编程序，认为这是以后每个人都需要掌握的基础技能。与之同时，黑客马拉松在国内也迅速的火起来，参加过几次，跟一群年轻人聚集在一起，交流想法并付诸于实践，在一个周末完成一个作品，每每想起都是段非常愉悦的经历。&lt;/p&gt;

&lt;p&gt;六一应 &lt;a href="http://segmentfault.com"&gt;SegmentFault&lt;/a&gt;&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; 高阳邀请，在其两周年黑客马拉松活动中作为技术创业者的代表，做一个分享。虽然作为创业者分享经验很不够格，不过这两年做风车下来也的确有一些想法，另外通过 &lt;a href="http://teahour.fm"&gt;Teahour&lt;/a&gt; 从不少创业者那里学到了很多，所以也就在活动上做了一次简短的即兴演讲，刚好跟 『Write the Code. Change the world』有点关联。&lt;/p&gt;

&lt;p&gt;SegmentFault 的使命是『创造属于开发者的时代』，我个人很喜欢这个远景，很美好。作为开发者，处在现在这个时代，我们是幸运的。我记得我 06 年的时候第一次跟朋友创业做互联网产品，当时什么东西都要自己去管，比如要自己买服务器、找 IDC 托管、产品开发中如果需要用什么服务都要自己做，真的是很讨厌，既浪费时间又浪费精力。而现在呢，相比较起来我们去制作一个产品的成本已经很低了，一个团队，三个月时间迅速开发原型，云主机用 UCloud 之类，文件存储用又拍云，发邮件用 SendCloud，还有各种开放平台等等。所以，作为一个开发者，作为一个会写代码的人&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;，我们有个很大的优势，就是就算整个世界抛弃了你，你还是能一个人去把产品开发出来，启动成本很低。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;但是，是否启动成本低，我们就应该甩开膀子干呢？千万别，思考清楚了，宁愿在真正开始做事情前多花时间思考。我在去年曾经写过一篇文章&lt;a href="http://yedingding.com/2013/10/11/how-to-find-tech-cofounder.html"&gt;『如何吸引技术合伙人』&lt;/a&gt;，其中很关键的两点是看对方是否对 idea 有足够的认识以及是否有 traction 可以验证。换位思考，我们自己创业时，也应该如此，多思考，好的坏的都要思考。&lt;/p&gt;

&lt;p&gt;去年中国 Ruby 大会上，Kevin Dewalt 曾经做过一次非常精彩的演讲 &lt;a href="http://www.infoq.com/cn/presentations/combination-ror-and-better-startup-strategy-in-business"&gt;『How to Use Rails and Ruby to validate your Startup idea』&lt;/a&gt;，他认为，一个产品的成功，在一开始就得思考这三个问题。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Problem - 问题？&lt;/strong&gt;. 你是否在解决一个真正的问题？你需要从第一天开始就去验证你的假设，这需要你去做产品定位和采访潜在用户。在没有找到这个答案之前，做其它任何的都是徒劳的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Revenue - 会买？&lt;/strong&gt;. 我们得考虑商业价值，也就是人们是否愿意花钱解决这个问题？不管你在解决多少实际的问题，但是如果多数用户还是宁愿忍受这个问题也不愿意花钱买解决方案，那还是不值得做，得慎重。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Channel - 怎么卖&lt;/strong&gt;. 你有没有一个有效的渠道去推到愿意花钱解决这个问题的人？问题就在那里，也有足够的人愿意付钱，最后就是问问你能否推广到这个群体去，同时还能有盈利。如果你的推广成本大于你的收入，那么还是没法做。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所以，如果你要开始一个项目，问自己这三个问题。思考清楚后，追随你的内心，做出选择，奋力向前。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="Maslow 5 层需求模型" src="http://yedingding.com/images/write-the-code-change-the-world/maslow-hierarchy-of-needs.jpg?1403585998" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;我那篇文章有个读者曾问过我，如果是我自己，创业最想得到的是什么。我的回答是，能自己主导做一些真正有社会价值的事，并且经济回报有盼头。我不是圣人，所以不否认是有物质的追求在，但是理想层面上的精神追求会更多点。马斯洛在其基本五层需求模型理论中指出，人类最底层的是衣食住行等生理需求，上一层是安全上的需求，第三层是作为社会群体在社交上的需求，第四层是尊重的需求，最上层是自我实现的需求，一种创造的需要。如果我们是工作的话，生理需求和安全需求会很容易满足。然后是社交需求、尊重需求的满足，最后我们才会考虑自我实现。但是创业不同，我认为创业是直接跳过了下面的四层，更多的是在追求自我实现的需求，去实现自己的理想和目标，所以愿意在一定时间内放弃自己的一些下层需求。&lt;/p&gt;

&lt;p&gt;我们都知道，创业成功的几率是非常小的，100 个项目里面有 90 个是失败的，有 8 个不失败但是也就那样，只有 2 个是非常成功的。Scott Shane&lt;sup id="fnref3"&gt;&lt;a href="#fn3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; 在其著名畅销书 &lt;a href="http://www.amazon.com/The-Illusions-Entrepreneurship-Entrepreneurs-Investors/dp/0300158564"&gt;『The Illusions of Entrepreneurship』&lt;/a&gt; 就披露了很多关于创业者的黑暗事实，比如大多数创业公司会在 5 年内倒闭，大多数创业者比他工作的时候收入要低，大多数创业者收入不稳定，大多数创业者工作时间比工作要更长。理想很美好，现实很残酷，但是即使知道这些，我们是否就会失去创业的勇气？不！因为我们都有那么一点小理想，我们在追求自我实现，所以不如让我们姑且忘掉未来的成败，而是专注在成长和价值的提高上。而且，即使失败率如此之高，我们还是有办法来降低，比如更好的利用时间，更高效的做事，这也是我为啥坚持做风车的原因，风车本质上就是高效任务管理工具，让你们更好的成长，因为时间管理说白了到最后就是任务管理。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="Feature Usage" src="http://yedingding.com/images/write-the-code-change-the-world/feature-usage.jpg?1403585998" /&gt;&lt;br/&gt;
  &lt;small&gt;Source: Standish Group, Feature usage of software projects&lt;/small&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;对于大多数技术创业者来说，也许基本只有时间成本，可是时间对我们来说是一个非常昂贵的东西，所以要学会合理地利用时间和资源。钱是赚不完的，但是时间过了就找不回来了，这也是为什么我们要时刻提醒自己要专注在核心价值的地方。这并不是说我们应该工作的更努力，工作的时间应该要更长，而是努力用最小的时间去换取最大的价值。如果不是自己的产品价值，那么就不需要做，勇于对用户说不，价值少的可以考虑让第三方来做等等。Standish Group&lt;sup id="fnref4"&gt;&lt;a href="#fn4" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; 曾在 2002 年做过一次市场调查，对于一个软件产品，平均竟然有 64% 的功能是用户从来不用或者很少用到的，而经常用到的只有 20%。所以，不要浪费时间精力去做那 64%！同时，比起不停的埋头开发，要不停的去了解用户，与用户沟通，保持改进，提高客户满意度，这些都是可以让我们降低失败率的手段。&lt;/p&gt;

&lt;p&gt;最后，以我自勉的几个字做结尾：『勿忘初心，但行好事，莫问前程』。&lt;/p&gt;

&lt;p&gt;PS：SegmentFault 2014 黑客马拉松北京站凑巧也在这个周末举行，有兴趣可以去参加一下，地址戳&lt;a href="http://segmentfault.com/e/hackathon-beijing-2014"&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;SegementFault 是国内最活跃的黑客马拉松组织者。&amp;nbsp;&lt;a href="#fnref1" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;现在学编程的门槛已经很低了，只要愿意并且投入时间就可。Udemy 上有不少非常好的课程，一般人我不告诉他。&amp;nbsp;&lt;a href="#fnref2" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;Scott Shane 是创业研究领域的著名学者、凯思西储大学管理学院教授，也是一位投资人。&amp;nbsp;&lt;a href="#fnref3" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn4"&gt;
&lt;p&gt;Standish Group 是美国专门从事跟踪 IT 项目成功或失败的权威机构，它每年会发布一个 CHAOS Report，给出IT项目相关调查数据结果。&amp;nbsp;&lt;a href="#fnref4" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
