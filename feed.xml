<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Do Great Things - 叶玎玎</title>
  <subtitle> 叶玎玎在技术、创业、团队协作和项目管理上的思考和分享</subtitle>
  <id>http://yedingding.com</id>
  <link href="http://yedingding.com/"/>
  <link href="http://yedingding.com/feed.xml" rel="self"/>
  <updated>2014-07-28T12:00:00+08:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>开始 node-webkit 前，你应该知道的</title>
    <link rel="alternate" href="/2014/07/28/node-webkit-intro.html"/>
    <id>/2014/07/28/node-webkit-intro.html</id>
    <published>2014-07-28T12:00:00+08:00</published>
    <updated>2014-07-28T12:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="node-webkit" src="/images/node-webkit-intro/nw.jpg?1406554637"&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上周末在 &lt;a href="http://teahour.fm/2014/07/22/node-webkit-with-rogerwang.html"&gt;Teahour&lt;/a&gt; 邀请到了 node-webkit 的作者&lt;a href="https://twitter.com/wwr"&gt;王文睿&lt;/a&gt;来做客，聊了一下 node-webkit 的故事和 HTML5 技术在应用程序开发领域的发展，很有收获。最近几年，用 Web 技术来开发应用程序的框架层出不穷，如 node-webkit, Chrome Apps, Titanium, TideSDK, Atom Shell，而 node-webkit 正是这些框架中的一个佼佼者。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/rogerwang/node-webkit"&gt;node-webkit&lt;/a&gt; 这个项目开始于 2011 年，是一个让开发者可以用 Web 技术，也就是 HTML5、CSS 和 JavaScript 来编写桌面程序的应用框架。作为开发者，我们只需要写一份代码，就能编译成跑在 Windows、Mac 和 Linux 下的应用程序。目前在 github 上，node-webkit 有将近 15000 个 Star，1600 个 Fork，可以说是由国人开发的一个非常流行的开源软件。在本期节目中，文睿介绍了目前使用 node-webkit 开发的一些典型应用，大致可以分成这么几类，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;桌面开发 IDE，比如 &lt;a href="http://www.lighttable.com/"&gt;Light Table&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;游戏，比如 &lt;a href="http://www.brandonmustdie.com/"&gt;Brandon Must Die!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;媒体类应用，比如 &lt;a href="http://popcorntime.io/"&gt;Popcorn Time&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;工具软件，比如 &lt;a href="http://pad.haroopress.com/"&gt;Haroopod&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;企业内部应用，比如数据显示应用&lt;/li&gt;
&lt;li&gt;终端应用，比如 POS 机。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以看出，领域非常丰富，其中也不乏一些设计精良体验优美的应用。可以说，很大程度上，这得益于目前硬件的性能提升和 Web 的发展，动画、图形、音频、视频、2D、3D、WebGL 等等，都让基于 HTML5 的应用开发充满了想象力。&lt;/p&gt;

&lt;p&gt;从本质上来说，node-webkit 只是一个 web 应用的桌面运行环境。当我们说到桌面应用的时候，我们会想到需要有呈现给用户的界面，也需要能响应用户行为，跟系统打交道...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="node-webkit" src="http://yedingding.com/images/node-webkit-intro/nw.jpg?1406554637" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上周末在 &lt;a href="http://teahour.fm/2014/07/22/node-webkit-with-rogerwang.html"&gt;Teahour&lt;/a&gt; 邀请到了 node-webkit 的作者&lt;a href="https://twitter.com/wwr"&gt;王文睿&lt;/a&gt;来做客，聊了一下 node-webkit 的故事和 HTML5 技术在应用程序开发领域的发展，很有收获。最近几年，用 Web 技术来开发应用程序的框架层出不穷，如 node-webkit, Chrome Apps, Titanium, TideSDK, Atom Shell，而 node-webkit 正是这些框架中的一个佼佼者。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/rogerwang/node-webkit"&gt;node-webkit&lt;/a&gt; 这个项目开始于 2011 年，是一个让开发者可以用 Web 技术，也就是 HTML5、CSS 和 JavaScript 来编写桌面程序的应用框架。作为开发者，我们只需要写一份代码，就能编译成跑在 Windows、Mac 和 Linux 下的应用程序。目前在 github 上，node-webkit 有将近 15000 个 Star，1600 个 Fork，可以说是由国人开发的一个非常流行的开源软件。在本期节目中，文睿介绍了目前使用 node-webkit 开发的一些典型应用，大致可以分成这么几类，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;桌面开发 IDE，比如 &lt;a href="http://www.lighttable.com/"&gt;Light Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;游戏，比如 &lt;a href="http://www.brandonmustdie.com/"&gt;Brandon Must Die!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;媒体类应用，比如 &lt;a href="http://popcorntime.io/"&gt;Popcorn Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;工具软件，比如 &lt;a href="http://pad.haroopress.com/"&gt;Haroopod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;企业内部应用，比如数据显示应用&lt;/li&gt;
&lt;li&gt;终端应用，比如 POS 机。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可以看出，领域非常丰富，其中也不乏一些设计精良体验优美的应用。可以说，很大程度上，这得益于目前硬件的性能提升和 Web 的发展，动画、图形、音频、视频、2D、3D、WebGL 等等，都让基于 HTML5 的应用开发充满了想象力。&lt;/p&gt;

&lt;p&gt;从本质上来说，node-webkit 只是一个 web 应用的桌面运行环境。当我们说到桌面应用的时候，我们会想到需要有呈现给用户的界面，也需要能响应用户行为，跟系统打交道。那么，node-webkit 是怎么做到这点的。要了解这个，必须得先了解 node 和 webkit。&lt;/p&gt;

&lt;p&gt;Node 是一个基于 Google Chrome V8 引擎的轻量级 Javascript 运行平台。Node 采用 C++ 编写，直接在操作系统的应用层上，支持很多系统级的 API，如文件操作、网络编程等，所以可以用来编写系统级应用或者服务端应用等。&lt;/p&gt;

&lt;p&gt;Webkit 是 Web 内容的渲染引擎。举个例子，一个网页由 HTML、CSS 和 JavaScript 组成，页面加载后会被语法分析器解析成树，然后交由 Webkit 做渲染，这样才得到一个我们看到的页面。在 node-webkit 里，选择了是基于 Webkit 二次开发的 Blink 引擎，正好其 JavaScript 解析引擎也是 node 所采用的 V8 引擎。&lt;/p&gt;

&lt;p&gt;由于浏览器安全模型的缘故，Webkit 并不能访问到系统调用，而这却是桌面应用的必须。Node 本身支持系统级的 API，但是缺乏对于渲染的支持，所以文睿在 2011 就有了做 node-webkit 的想法，把两者揉合在一起，既能对接操作系统，又能提供用户交互。在做简单尝试用 webkit-gtk 和 node 来做实验后，在 2012 年开始转向 Chromium，从一开始使用的 Chromium Embeded Framework（CEF）到后面完全基于 Chromium。&lt;/p&gt;

&lt;p&gt;得益于 node 和 Chromium 自身的蓬勃发展，node-webkit 也发展的很快，到今天已经发布到了 0.10 版本。下面来讲讲 node-webkit 的一些主要实现细节。&lt;/p&gt;

&lt;p&gt;node 是一个事件驱动的框架，消息处理基于 libuv 实现。webkit 的 JS 引擎也是事件驱动的，是 Chrome 自己实现的 MessagePump。所谓事件驱动，简单说就是当某个事件发生的时候，比如有用户输入进来，去执行对应的处理代码。 所以，node-webkit 统一了 node 和 webkit 中的事件处理方式，在一个消息循环中去处理 node 里和 webkit 里的不同事件。&lt;/p&gt;

&lt;p&gt;解决了事件处理统一的问题后，node 和 webkit 的揉合还需要互相能访问。node-webkit 里面存在着两个 context，node context 和 webkit context，互相访问也就是 Context 能互通，访问各自的对象。所以在 node-webkit 初始化的时候，node  context 会被注入到 WebKit 里面。之后，Webkit context 就可以访问到 node context 了。&lt;/p&gt;

&lt;p&gt;同时，node-webkit 对 Webkit 的安全模型也做了一些修改。在 node-webkit 中，有两种不同的 Frames，Node frame 和 normal frame&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;。熟悉 Web 开发的朋友应该知道，对不同的站点发起一个 AJAX 请求会返回跨域错误，也就是 &lt;a href="http://en.wikipedia.org/wiki/Same_origin_policy"&gt;Same-origin Policy&lt;/a&gt;。node-webkit 中的 normal frame，跟浏览器中的一样，仍然有这个限制。但是在 Node frame 中，将不再有这个限制，所有的 Node frame 中共享同一个 security token，包括 node context
和 webkit context，跨域访问被允许，也就能访问到 node context 中的对象。所以作为应用开发者，对于不受信任的用户行为输入一定要做保护，防止因为这个造成一些破坏性行为，或者放入 normal frame 中。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="Chromium Layers" src="http://yedingding.com/images/node-webkit-intro/chromium-layers.jpg?1406554637" /&gt;
  &lt;small&gt;Chromium Conceptual Application Layers&lt;/small&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;值得注意的是，尽管 Chrome 本身对于 HTML5 的支持已经比较完备了，但是有些特性是在浏览器层即上图的 Browser 实现，而 node-webkit 中 webkit 只到了 Content Layer 即上图的 WebContent，node-webkit 本身的实现等于浏览器层。所以，node-webkit 对于一些 HTML5 特性还缺乏支持，比如 Web Notification&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;。不过，目前 Chromium 团队正在把这些 HTML5 特性的支持解耦移动到 Content Layer，这个对于 node-webkit 来说绝对是个非常好的消息。&lt;/p&gt;

&lt;p&gt;如果你细心的看上图的话，你会发现浏览器层还有 UI 绘制部分。node-webkit 也是一样，实现了直接绘制原生 UI 控件的 API，比如菜单、系统托盘、剪贴板等。这部分实现，的确也是主要参考了 Chromium 的跨平台 UI 实现。&lt;/p&gt;

&lt;p&gt;目前 node-webkit 的正式版是 0.10.0，基于 �Node v0.11.13 和 Chromium 35.0.1916.113。node-webkit 的大版本更新策略是跟着 Chromium 的版本升级而升级，比如 0.10.0 中的 10。如果 node-webkit 本身有更新或者 node 版本有更新，对应升级的是第三个数字，也就是 0.10.0 中的最后一个 0。&lt;/p&gt;

&lt;p&gt;如果你想了解最多 node-webkit 的信息，可以听听我们这期 &lt;a href="http://teahour.fm/2014/07/22/node-webkit-with-rogerwang.html"&gt;Teahour 节目&lt;/a&gt;。如果你想开发跨平台的桌面应用，那么官方的 &lt;a href="https://github.com/rogerwang/node-webkit/wiki"&gt;Wiki&lt;/a&gt; 绝对是个很好的开始。&lt;/p&gt;

&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;对于 node-webkit 的安全模型，具体可以参考 &lt;a href="https://github.com/rogerwang/node-webkit/wiki/Security%EF%BC%8C%E4%BA%86%E8%A7%A3%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%BF%99%E4%B8%A4%E7%A7%8D%E4%B8%8D%E5%90%8C%E7%9A%84"&gt;https://github.com/rogerwang/node-webkit/wiki/Security，了解如何使用这两种不同的&lt;/a&gt; Frame。&amp;nbsp;&lt;a href="#fnref1" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;目前已经有 &lt;a href="https://github.com/rogerwang/node-webkit/pull/1951"&gt;PR&lt;/a&gt; 实现了 Notification，相信不久会在 node-webkit 正式版中被支持。&amp;nbsp;&lt;a href="#fnref2" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>Deliver Better Product (I)</title>
    <link rel="alternate" href="/2014/07/09/deliver-better-product-i.html"/>
    <id>/2014/07/09/deliver-better-product-i.html</id>
    <published>2014-07-09T12:00:00+08:00</published>
    <updated>2014-07-09T12:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Most Products Fail!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;是的，大多数的产品都会死掉，一个黑暗的事实。就如很多人认为现在团队协作工具出来这么多，很不看好风车一样。但是就如风车诞生的初衷一样，我们希望风车能够帮助创业团队更好的成长，更快地发布更好的产品，很欣慰现在风车真的帮助到了不少产品团队，让我能更有动力去改进产品和提供更好的服务。之所以我相信风车能真正帮到用户发布更好的产品，是因为我坚信对于一个创业团队来说，采用正确的做事方式和合适的工具能大大降低失败几率。&lt;/p&gt;

&lt;p&gt;一个产品的成功，也许需要天时地利人和&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;，但是要做到不失败相对就容易的多了。我想分享一些我们做事的方式，希望能帮助到你。这里没有互联网思维，这里没有成功学，有的只是真正的工作实践心得，甚至有些也许都是很笨的，但是希望这些分享能给你带来一点点的启发，并且还能付诸于实践。&lt;/p&gt;

&lt;p&gt;&lt;aside class="“aside”"&gt;
  &lt;img alt="Scrum Roles" src="/images/deliver-better-product-i/KnibergRoles.jpg?1404985052"&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上图是对 Scrum 敏捷方法不同角色的职责的很好诠释，即使是对于不采用 Scrum 的团队来说，我们也应该这样去做产品。做正确的事情，正确的做事情，并且快速的做事情，这样一个团队，最佳情况就是总是能在正确的时间用正确的方法做正确的事，非常完美。对于这个系列的计划，我希望能涵盖产品的整个生命线。本文开篇，主要介绍如何做产品远景和形态探索，后面的文章会涉及如何做用户角色分析，如何做用户故事、如何做计划评估、如果做迭代计划、如何协作执行、如何做回顾测试、如何做用户访谈等&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Great Product starts with Vision&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;正如我在&lt;a href="http://yedingding.com/2014/06/17/know-your-consumers.html"&gt;「你是否关注过消费者心理？」&lt;/a&gt; 所写，优秀的市场营销者，会先去传递产品的使命，然后才是与使命匹配的具体需求实现。对外如此，对内同样需要如此，不然团队事情会做的很茫然。为什么我们要做这个功能，为什么我们不做那个功能？为什么我们现在需要做这个，而不是那个？回忆一下，曾经你有没有问过自己这些问题，为什么会...&lt;/p&gt;</summary>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Most Products Fail!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;是的，大多数的产品都会死掉，一个黑暗的事实。就如很多人认为现在团队协作工具出来这么多，很不看好风车一样。但是就如风车诞生的初衷一样，我们希望风车能够帮助创业团队更好的成长，更快地发布更好的产品，很欣慰现在风车真的帮助到了不少产品团队，让我能更有动力去改进产品和提供更好的服务。之所以我相信风车能真正帮到用户发布更好的产品，是因为我坚信对于一个创业团队来说，采用正确的做事方式和合适的工具能大大降低失败几率。&lt;/p&gt;

&lt;p&gt;一个产品的成功，也许需要天时地利人和&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;，但是要做到不失败相对就容易的多了。我想分享一些我们做事的方式，希望能帮助到你。这里没有互联网思维，这里没有成功学，有的只是真正的工作实践心得，甚至有些也许都是很笨的，但是希望这些分享能给你带来一点点的启发，并且还能付诸于实践。&lt;/p&gt;

&lt;p&gt;&lt;aside class=“aside”&gt;
  &lt;img alt="Scrum Roles" src="http://yedingding.com/images/deliver-better-product-i/KnibergRoles.jpg?1404985052" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上图是对 Scrum 敏捷方法不同角色的职责的很好诠释，即使是对于不采用 Scrum 的团队来说，我们也应该这样去做产品。做正确的事情，正确的做事情，并且快速的做事情，这样一个团队，最佳情况就是总是能在正确的时间用正确的方法做正确的事，非常完美。对于这个系列的计划，我希望能涵盖产品的整个生命线。本文开篇，主要介绍如何做产品远景和形态探索，后面的文章会涉及如何做用户角色分析，如何做用户故事、如何做计划评估、如果做迭代计划、如何协作执行、如何做回顾测试、如何做用户访谈等&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Great Product starts with Vision&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;正如我在&lt;a href="http://yedingding.com/2014/06/17/know-your-consumers.html"&gt;「你是否关注过消费者心理？」&lt;/a&gt; 所写，优秀的市场营销者，会先去传递产品的使命，然后才是与使命匹配的具体需求实现。对外如此，对内同样需要如此，不然团队事情会做的很茫然。为什么我们要做这个功能，为什么我们不做那个功能？为什么我们现在需要做这个，而不是那个？回忆一下，曾经你有没有问过自己这些问题，为什么会问这些问题。究其原因，其实是产品的使命和远景缺乏透明，或者不够简单和清晰，最终导致了执行层面的混乱。用句最近流行的话来讲，『你不要用战术的勤奋来掩盖战略的懒惰』，不要去逃避寻找远景这个答案。只有有了产品远景，后面的路才能走得顺，不然相信我，出来混，迟早是要还的。&lt;/p&gt;

&lt;p&gt;&lt;aside class=“aside”&gt;
  &lt;img alt="Vision" src="http://yedingding.com/images/deliver-better-product-i/vision.jpg?1404985052" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;那么，应该如何才能定出一个好的产品远景呢？作为一个创业者，我们时常被要求用一句话来描述清楚产品，远景也应该如此。经典的 30 秒电梯游说就非常适合用来做产品远景测试，&lt;/p&gt;

&lt;blockquote&gt;
&lt;b&gt;For&lt;/b&gt; (target customer)&lt;br/&gt;
&lt;b&gt;Who&lt;/b&gt; (statement of the need or opportunity)&lt;br/&gt;
&lt;b&gt;The&lt;/b&gt; (product name) &lt;b&gt;is a&lt;/b&gt; (product category)&lt;br/&gt;
&lt;b&gt;That&lt;/b&gt; (key benefit, compelling reason to buy)&lt;br/&gt;
&lt;b&gt;Unlike&lt;/b&gt; (primary competitive alternative)&lt;br/&gt;
&lt;b&gt;Our product&lt;/b&gt; (statement of primary differentiation)&lt;br/&gt;
&lt;/blockquote&gt;

&lt;p&gt;具体来说，就是产品做给谁、解决什么需求，产品是什么、核心价值是啥，跟竞争对手相比区别主要在哪。简单的 30 秒，但是这个定义过程需要做很多功课，非常耗时，但是如果能一口气讲清楚并且还能让人两眼发光，那么你就有了一个简单清晰而且还令人振奋的产品远景，也就有了一个好的开始。现在坐下来，好好思考一下，针对你的产品去填上那些括号里的内容，就像我对风车的远景定义。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;b&gt;For&lt;/b&gt; 创业团队&lt;br/&gt;
  &lt;b&gt;Who&lt;/b&gt; 想更好的成长&lt;br/&gt;
  &lt;b&gt;The&lt;/b&gt; 风车 &lt;b&gt;是一个&lt;/b&gt; 团队协作工具&lt;br/&gt;
  &lt;b&gt;That&lt;/b&gt; 以任务管理为基础，提供简洁纯净的工作空间，帮助团队节省大量时间和资源去做真正要做的事&lt;br/&gt;
  &lt;b&gt;Unlike&lt;/b&gt; Jira、Basecamp、Trello、Email 和 Excel&lt;br/&gt;
  &lt;b&gt;Our product&lt;/b&gt; 专注于任务进度掌控和高效执行，信息合理有效地组织起来，真正做到简单、轻量和高效的平衡。&lt;br/&gt;
&lt;/blockquote&gt;

&lt;p&gt;转换成中文习惯就是『风车是一款以任务管理为基础，提供简洁纯净的工作空间的团队协作工具，让创业团队能节省大量的时间和资源做真正重要的事情，更好的成长。不像 Jira、Basecamp、Trello、Email 或 Excel，风车更专注于任务的进度掌控和高效执行，信息合理有效地组织起来，真正做到简单、轻量和高效的平衡』。&lt;/p&gt;

&lt;p&gt;当有了这个远景以后，我们就应该围绕着这个远景去定义产品形态，设计出一个用户想用、用户知道怎么用并且可以做出来的产品&lt;sup id="fnref3"&gt;&lt;a href="#fn3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;。这个过程，需要整个团队一起参与和努力，更需要相互信任和尊重，以远景为中心，多从用户的角度出发和思考，慢慢聚拢收窄需求，最终的的目标是寻找到最小可行产品，用最小成本去做测试，看看我们是不是在正确的方向上。&lt;/p&gt;

&lt;p&gt;&lt;aside class=“aside”&gt;
  &lt;img alt="Discovery" src="http://yedingding.com/images/deliver-better-product-i/discovery.jpg?1404985052" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;MVP 的确定，绝对不是一蹴而就，而是需要一段时间的反复探索、试错和纠正，有时甚至需要原型的辅助测试。所以，在探索的过程中，我们需要不同时刻带不同的帽子。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;学会带最终用户的帽子。忘掉自己的知识背景，去思考如果自己是最终用户，会希望是什么样子的，尽可能的抛掉主观因素。&lt;/li&gt;
&lt;li&gt;学会带用户支持的帽子。去聆听用户的声音，他遇到了什么问题，他希望看到什么结果。即使是他要一辆更快的马车&lt;sup id="fnref4"&gt;&lt;a href="#fn4" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt;，对于我们来说也是知道他的问题是嫌弃速度不够快。&lt;/li&gt;
&lt;li&gt;学会带产品经理的帽子。用户声音中存在着很多噪音，用户也并不清楚自己需要什么，所以我们需要从众多的用户反馈和建议中挖掘出用户的真正潜在需求并给出可行解决方案。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;产品形态的定义过程，是一个从具象到抽象，再从抽象回到具象的过程。这个过程，依赖于对问题的深刻理解，也借助于用户行为测试和数据分析。 实际项目中，总会有很纠结的时候，听上去这个客户提的意见有道理，那个客户提的也有道理，我们该如何做决策？这个时候就需要依托于我们在前面定义的远景，通过做用户角色分析，来让我们专注在最重要的事情上。这将在本系列文章（II）里面介绍。&lt;/p&gt;

&lt;p&gt;在（I）的最后，再次重申，无论你的设计团队技术团队运营团队销售团队有多强，如果一开始设计出的不是一个用户想用且会用的产品，那么最终产品还是会走向失败。所以，从现在开始透明化你的产品远景，让团队每个成员都清楚知道前进的目标，这，真的很重要。&lt;/p&gt;

&lt;p&gt;读到这里，你有什么想法吗，欢迎大家留言讨论，谢谢!&lt;/p&gt;

&lt;p&gt;PS：上个月在杭州参加了吕毅的 CSPO 课程，有理论有实践，很有收获，推荐给产品经理或者创业者。如果你想了解吕毅和他的课程介绍，可以看&lt;a href="http://www.scrumalliance.org/community/profile/ylv"&gt;这里&lt;/a&gt;，9 月份在杭州也有一次课。&lt;/p&gt;

&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;个人认为天时地理人和对应站在风口上，进入合适的市场和有一只强大的团队，当然这得有一些运气。&amp;nbsp;&lt;a href="#fnref1" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;我得承认系列文章是很容易太监了，希望能多得到大家反馈和鼓励，希望不至于被批的太惨而心灰意冷，:)&amp;nbsp;&lt;a href="#fnref2" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;Valuable - 对用户有价值，用户想用；Usable - 用户知道怎么用；Feasible - 技术可以实现的。&amp;nbsp;&lt;a href="#fnref3" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn4"&gt;
&lt;p&gt;“If I had asked people what they wanted, they would have said faster horses.” - Henry Ford, the founder of the Ford Motor Company&amp;nbsp;&lt;a href="#fnref4" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>微信企业号，Do or Die?</title>
    <link rel="alternate" href="/2014/07/03/wechat-enterprise-challenge.html"/>
    <id>/2014/07/03/wechat-enterprise-challenge.html</id>
    <published>2014-07-03T20:00:00+08:00</published>
    <updated>2014-07-03T20:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;img alt="WeChat" src="/images/wechat-enterprise-challenge/wechat-645x250.jpg?1404392414"&gt;&lt;/p&gt;

&lt;p&gt;对于一位在企业服务领域的创业者来说，最近几天最具有爆炸力的新闻莫如是微信继公众号、服务号之后，即将推出企业号，旨在连接人和企业。一时间，媒体、企业、创业者，都开始思考着各种可能性，到底企业号最后会是以什么形态出现，对于目前不瘟不火的企业服务市场又将会带来什么样的变化。&lt;/p&gt;

&lt;p&gt;“如果腾讯抄你们或者进入这个市场，你们会怎么办？”这是国内的 VC 们很喜欢问的一个问题。而现在腾讯是实实在在的进入了。腾讯的进入，对于像风车这样的标准化 SaaS 团队协作服务来说，到底会是一个机遇，还是一个灭顶之灾呢？&lt;/p&gt;

&lt;p&gt;从第一天知道这个消息的时候，我一直都是觉得这是一个好事，我非常乐于看到微信进入这个市场。不管我们承不承认，微信现在已经实实在在的渗透到了企业内部，使用粘度之高简直令人发指。如果在任何一个企业做一个调查，统计使用时间最多的办公软件，我相信微信都跳不出前三，即使它定位不在办公。公司员工之间在用微信沟通，公司客户之间在用微信沟通，创业者投资人之间也用微信在沟通，所以微信进入这个市场的时机已然成熟。&lt;/p&gt;

&lt;p&gt;那么，这个特殊的企业号能做什么？让我们先来看看服务号和公众号能做什么。风车目前在开发服务号，基本功能也是一些简单的快速任务入口和项目动态通知提醒，再在其上是提供服务信息和客服。这里最大的问题是服务号连接的是企业里的个人和企业服务提供商，而不是企业本身和企业服务提供商。如果我们要做到后者，就需要企业自身去申请服务号，然后跟风车做对接。而这，从传言来看，就是微信即将推出的企业号，唯一不同的是由微信来制定标准接口，类似苹果的应用商店，规定应用接入的规范，而风车只需要作为其中一个应用接入即可，事情将简单很多。而因此，企业也从多应用入口变成一个企业号入口。&lt;/p&gt;

&lt;p&gt;微信企业号的最大价值，在我看来主要是两点，不是它能做微信打卡，也不是它能做微信报销等，而是它解决了企业的两大基本问题，一是统一了账号系统，...&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;img alt="WeChat" src="http://yedingding.com/images/wechat-enterprise-challenge/wechat-645x250.jpg?1404392414" /&gt;&lt;/p&gt;

&lt;p&gt;对于一位在企业服务领域的创业者来说，最近几天最具有爆炸力的新闻莫如是微信继公众号、服务号之后，即将推出企业号，旨在连接人和企业。一时间，媒体、企业、创业者，都开始思考着各种可能性，到底企业号最后会是以什么形态出现，对于目前不瘟不火的企业服务市场又将会带来什么样的变化。&lt;/p&gt;

&lt;p&gt;“如果腾讯抄你们或者进入这个市场，你们会怎么办？”这是国内的 VC 们很喜欢问的一个问题。而现在腾讯是实实在在的进入了。腾讯的进入，对于像风车这样的标准化 SaaS 团队协作服务来说，到底会是一个机遇，还是一个灭顶之灾呢？&lt;/p&gt;

&lt;p&gt;从第一天知道这个消息的时候，我一直都是觉得这是一个好事，我非常乐于看到微信进入这个市场。不管我们承不承认，微信现在已经实实在在的渗透到了企业内部，使用粘度之高简直令人发指。如果在任何一个企业做一个调查，统计使用时间最多的办公软件，我相信微信都跳不出前三，即使它定位不在办公。公司员工之间在用微信沟通，公司客户之间在用微信沟通，创业者投资人之间也用微信在沟通，所以微信进入这个市场的时机已然成熟。&lt;/p&gt;

&lt;p&gt;那么，这个特殊的企业号能做什么？让我们先来看看服务号和公众号能做什么。风车目前在开发服务号，基本功能也是一些简单的快速任务入口和项目动态通知提醒，再在其上是提供服务信息和客服。这里最大的问题是服务号连接的是企业里的个人和企业服务提供商，而不是企业本身和企业服务提供商。如果我们要做到后者，就需要企业自身去申请服务号，然后跟风车做对接。而这，从传言来看，就是微信即将推出的企业号，唯一不同的是由微信来制定标准接口，类似苹果的应用商店，规定应用接入的规范，而风车只需要作为其中一个应用接入即可，事情将简单很多。而因此，企业也从多应用入口变成一个企业号入口。&lt;/p&gt;

&lt;p&gt;微信企业号的最大价值，在我看来主要是两点，不是它能做微信打卡，也不是它能做微信报销等，而是它解决了企业的两大基本问题，一是统一了账号系统，二是提供了工作入口。&lt;/p&gt;

&lt;p&gt;一个企业内部会使用到很多不同的应用，每个应用都可能会有其自成一套的用户系统，对于企业来说很是头疼。标准化登陆系统是有，比如 &lt;a href="http://en.wikipedia.org/wiki/LDAP"&gt;LDAP&lt;/a&gt;、&lt;a href="http://en.wikipedia.org/wiki/Saml"&gt;SAML&lt;/a&gt;、&lt;a href="http://www.ca.com/us/securecenter/ca-siteminder.aspx"&gt;Siteminder&lt;/a&gt; 或者 &lt;a href="http://en.wikipedia.org/wiki/Kerberos_(protocol)"&gt;Kerberos&lt;/a&gt; 这些 SSO 方案，但是一来小企业很少有能力上这种方案，二来非标准化下不同的企业有他自己的方案，每个都支持对于创业团队来说非常麻烦，所以员工账号系统的统一管理对于企业来说一直是个很大的痛点。但是，如果创业团队专门去做一个员工账号系统的服务，又会面临无人对接的困境，阻力大大。所以，微信的推出，一定程度上可以解决这个问题，企业服务只需要对接微信账号系统就可，而微信也控制了这个最最基本却又非常重要的员工入口。&lt;/p&gt;

&lt;p&gt;如果说企业里面有什么服务是必需品，那非沟通服务莫属。也许你们不用风车这样的任务管理工具，但是你一定会用微信这样的沟通工具；也许你们不用印象笔记这样的知识管理工具，但是你一定会用微信这样的沟通工具；也许你们不用 Yammer 这样的社交管理工具，但是你一定会用微信这样的沟通工具。沟通工具非常适合做企业工作的入口，来汇总分散在各地的信息。比如对于风车团队来说，我们使用 HipChat，里面会汇总我们在 BitBucket 上的代码提交信息，在 UserVoice 上的用户支持信息，我们的部署通知系统消息，我们的集成测试信息，我们的任务管理消息等等。沟通工具仍是沟通工具，我们不用它来当任务管理用，也不当知识管理用，但是它天然就是很好的信息聚合系统，也是员工可能一天在线最长的应用。这段时间国外大红大紫的 Slack&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; 便是同样的概念。&lt;/p&gt;

&lt;p&gt;所以，从上面两点来说，我觉得微信企业号的出现，对于企业服务创业者来说，更多的是机遇，而不是挑战。它非但不会压缩企业服务提供商的生存空间，而且会开放平台给企业开发者，可以让大家共同来构建生态圈，对于微信、企业和创业者来说都是三方共赢的好事。同时，因为腾讯的介入，对于创业者来说，企业服务市场的教育成本会大大降低。这一次，&lt;strong&gt;微信连接人和企业&lt;/strong&gt;&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;目前对微信企业号的最大质疑在于员工不想与企业分享微信号，员工抗拒在微信中使用企业应用，因为&lt;del&gt;还让不让人下班了&lt;/del&gt;。姑且不说现在有些人就是用两个微信号的，一个加公司同事，另一个用来加个人朋友，单单说质疑微信企业号会造成员工压榨的情况，我只能说：“妈蛋，搞得好像没有微信企业号就不加班似的。看我口型，跟我喊，『用风车，不加班』，『用风车，不加班』。” 唉，讨厌，搞得我跟传销似的，敏捷宣言&lt;sup id="fnref3"&gt;&lt;a href="#fn3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;第一句，『个体和互动高于流程和工具』，尊重个体，加强团队之间的互动，然后才是合适的流程和相配合的工具。真用好了，我相信微信企业号及其生态圈可以成为中小企业成长的一把屠龙刀。&lt;/p&gt;

&lt;p&gt;你怎么看微信企业号，你们现在有用微信在做一些工作上的事情吗？欢迎留言交流。&lt;/p&gt;

&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;&lt;a href="https://slack.com"&gt;Slack&lt;/a&gt; 是国外新进最火的企业沟通工具，没有之一，我不是他的用户，但是他的很多东西让我眼前一亮，后面专门写篇文章分析。&amp;nbsp;&lt;a href="#fnref1" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;封闭不开放是腾讯一直的尿性，希望这次微信不要让我们失望&amp;hellip;.&amp;nbsp;&lt;a href="#fnref2" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;敏捷宣言中文版见&lt;a href="http://agilemanifesto.org/iso/zhchs/"&gt;这里&lt;/a&gt;&amp;nbsp;&lt;a href="#fnref3" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>Write the code. Change the world.</title>
    <link rel="alternate" href="/2014/06/24/write-the-code-change-the-world.html"/>
    <id>/2014/06/24/write-the-code-change-the-world.html</id>
    <published>2014-06-24T08:00:00+08:00</published>
    <updated>2014-06-24T08:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="WWDC 2014" src="/images/write-the-code-change-the-world/WWDC14.png?1403585998" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Write the Code. Change the world.&amp;rdquo;, 这个标题是苹果这个月的 WWDC 上的宣传语，看得我很激动，也相信每一个耐不住寂寞的开发者内心里都会有这样的冲动。最近一两年间，越来越多的人开始把编码能力跟读写能力做比较，呼吁每个人都应该去学习编程序，认为这是以后每个人都需要掌握的基础技能。与之同时，黑客马拉松在国内也迅速的火起来，参加过几次，跟一群年轻人聚集在一起，交流想法并付诸于实践，在一个周末完成一个作品，每每想起都是段非常愉悦的经历。&lt;/p&gt;

&lt;p&gt;六一应 &lt;a href="http://segmentfault.com"&gt;SegmentFault&lt;/a&gt;&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; 高阳邀请，在其两周年黑客马拉松活动中作为技术创业者的代表，做一个分享。虽然作为创业者分享经验很不够格，不过这两年做风车下来也的确有一些想法，另外通过 &lt;a href="http://teahour.fm"&gt;Teahour&lt;/a&gt; 从不少创业者那里学到了很多，所以也就在活动上做了一次简短的即兴演讲，刚好跟 『Write the Code. Change the world』有点关联。&lt;/p&gt;

&lt;p&gt;SegmentFault 的使命是『创造属于开发者的时代』，我个人很喜欢这个远景，很美好。作为开发者，处在现在这个时代，我们是幸运的。我记得我 06 年的时候第一次跟朋友创业做互联网产品，当时什么东西都要自己去管，比如要自己买服务器、找 IDC 托管、产品开发中如果需要用什么服务都要自己做，真的是很讨厌，既浪费时间又浪费精力。而现在呢，相比较起来我们去制作一个产品的成本已经很低了，一个团队，三个月时间迅速开发原型，云主机用 UCloud 之类，文件存储用又拍云，发邮件用 SendCloud，还有各种开放平台等等。所以，作为一个开发者，作为一个会写代码的人&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;，我们有个很大的优势，就是就算整个世界抛弃了你，你还是能一个人去把产品开发出来，启动成本很低。&lt;/p&gt;

&lt;p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="WWDC 2014" src="http://yedingding.com/images/write-the-code-change-the-world/WWDC14.png?1403585998" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Write the Code. Change the world.&amp;rdquo;, 这个标题是苹果这个月的 WWDC 上的宣传语，看得我很激动，也相信每一个耐不住寂寞的开发者内心里都会有这样的冲动。最近一两年间，越来越多的人开始把编码能力跟读写能力做比较，呼吁每个人都应该去学习编程序，认为这是以后每个人都需要掌握的基础技能。与之同时，黑客马拉松在国内也迅速的火起来，参加过几次，跟一群年轻人聚集在一起，交流想法并付诸于实践，在一个周末完成一个作品，每每想起都是段非常愉悦的经历。&lt;/p&gt;

&lt;p&gt;六一应 &lt;a href="http://segmentfault.com"&gt;SegmentFault&lt;/a&gt;&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt; 高阳邀请，在其两周年黑客马拉松活动中作为技术创业者的代表，做一个分享。虽然作为创业者分享经验很不够格，不过这两年做风车下来也的确有一些想法，另外通过 &lt;a href="http://teahour.fm"&gt;Teahour&lt;/a&gt; 从不少创业者那里学到了很多，所以也就在活动上做了一次简短的即兴演讲，刚好跟 『Write the Code. Change the world』有点关联。&lt;/p&gt;

&lt;p&gt;SegmentFault 的使命是『创造属于开发者的时代』，我个人很喜欢这个远景，很美好。作为开发者，处在现在这个时代，我们是幸运的。我记得我 06 年的时候第一次跟朋友创业做互联网产品，当时什么东西都要自己去管，比如要自己买服务器、找 IDC 托管、产品开发中如果需要用什么服务都要自己做，真的是很讨厌，既浪费时间又浪费精力。而现在呢，相比较起来我们去制作一个产品的成本已经很低了，一个团队，三个月时间迅速开发原型，云主机用 UCloud 之类，文件存储用又拍云，发邮件用 SendCloud，还有各种开放平台等等。所以，作为一个开发者，作为一个会写代码的人&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;，我们有个很大的优势，就是就算整个世界抛弃了你，你还是能一个人去把产品开发出来，启动成本很低。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;但是，是否启动成本低，我们就应该甩开膀子干呢？千万别，思考清楚了，宁愿在真正开始做事情前多花时间思考。我在去年曾经写过一篇文章&lt;a href="http://yedingding.com/2013/10/11/how-to-find-tech-cofounder.html"&gt;『如何吸引技术合伙人』&lt;/a&gt;，其中很关键的两点是看对方是否对 idea 有足够的认识以及是否有 traction 可以验证。换位思考，我们自己创业时，也应该如此，多思考，好的坏的都要思考。&lt;/p&gt;

&lt;p&gt;去年中国 Ruby 大会上，Kevin Dewalt 曾经做过一次非常精彩的演讲 &lt;a href="http://www.infoq.com/cn/presentations/combination-ror-and-better-startup-strategy-in-business"&gt;『How to Use Rails and Ruby to validate your Startup idea』&lt;/a&gt;，他认为，一个产品的成功，在一开始就得思考这三个问题。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Problem - 问题？&lt;/strong&gt;. 你是否在解决一个真正的问题？你需要从第一天开始就去验证你的假设，这需要你去做产品定位和采访潜在用户。在没有找到这个答案之前，做其它任何的都是徒劳的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Revenue - 会买？&lt;/strong&gt;. 我们得考虑商业价值，也就是人们是否愿意花钱解决这个问题？不管你在解决多少实际的问题，但是如果多数用户还是宁愿忍受这个问题也不愿意花钱买解决方案，那还是不值得做，得慎重。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Channel - 怎么卖&lt;/strong&gt;. 你有没有一个有效的渠道去推到愿意花钱解决这个问题的人？问题就在那里，也有足够的人愿意付钱，最后就是问问你能否推广到这个群体去，同时还能有盈利。如果你的推广成本大于你的收入，那么还是没法做。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所以，如果你要开始一个项目，问自己这三个问题。思考清楚后，追随你的内心，做出选择，奋力向前。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="Maslow 5 层需求模型" src="http://yedingding.com/images/write-the-code-change-the-world/maslow-hierarchy-of-needs.jpg?1403585998" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;我那篇文章有个读者曾问过我，如果是我自己，创业最想得到的是什么。我的回答是，能自己主导做一些真正有社会价值的事，并且经济回报有盼头。我不是圣人，所以不否认是有物质的追求在，但是理想层面上的精神追求会更多点。马斯洛在其基本五层需求模型理论中指出，人类最底层的是衣食住行等生理需求，上一层是安全上的需求，第三层是作为社会群体在社交上的需求，第四层是尊重的需求，最上层是自我实现的需求，一种创造的需要。如果我们是工作的话，生理需求和安全需求会很容易满足。然后是社交需求、尊重需求的满足，最后我们才会考虑自我实现。但是创业不同，我认为创业是直接跳过了下面的四层，更多的是在追求自我实现的需求，去实现自己的理想和目标，所以愿意在一定时间内放弃自己的一些下层需求。&lt;/p&gt;

&lt;p&gt;我们都知道，创业成功的几率是非常小的，100 个项目里面有 90 个是失败的，有 8 个不失败但是也就那样，只有 2 个是非常成功的。Scott Shane&lt;sup id="fnref3"&gt;&lt;a href="#fn3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt; 在其著名畅销书 &lt;a href="http://www.amazon.com/The-Illusions-Entrepreneurship-Entrepreneurs-Investors/dp/0300158564"&gt;『The Illusions of Entrepreneurship』&lt;/a&gt; 就披露了很多关于创业者的黑暗事实，比如大多数创业公司会在 5 年内倒闭，大多数创业者比他工作的时候收入要低，大多数创业者收入不稳定，大多数创业者工作时间比工作要更长。理想很美好，现实很残酷，但是即使知道这些，我们是否就会失去创业的勇气？不！因为我们都有那么一点小理想，我们在追求自我实现，所以不如让我们姑且忘掉未来的成败，而是专注在成长和价值的提高上。而且，即使失败率如此之高，我们还是有办法来降低，比如更好的利用时间，更高效的做事，这也是我为啥坚持做风车的原因，风车本质上就是高效任务管理工具，让你们更好的成长，因为时间管理说白了到最后就是任务管理。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="Feature Usage" src="http://yedingding.com/images/write-the-code-change-the-world/feature-usage.jpg?1403585998" /&gt;&lt;br/&gt;
  &lt;small&gt;Source: Standish Group, Feature usage of software projects&lt;/small&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;对于大多数技术创业者来说，也许基本只有时间成本，可是时间对我们来说是一个非常昂贵的东西，所以要学会合理地利用时间和资源。钱是赚不完的，但是时间过了就找不回来了，这也是为什么我们要时刻提醒自己要专注在核心价值的地方。这并不是说我们应该工作的更努力，工作的时间应该要更长，而是努力用最小的时间去换取最大的价值。如果不是自己的产品价值，那么就不需要做，勇于对用户说不，价值少的可以考虑让第三方来做等等。Standish Group&lt;sup id="fnref4"&gt;&lt;a href="#fn4" rel="footnote"&gt;4&lt;/a&gt;&lt;/sup&gt; 曾在 2002 年做过一次市场调查，对于一个软件产品，平均竟然有 64% 的功能是用户从来不用或者很少用到的，而经常用到的只有 20%。所以，不要浪费时间精力去做那 64%！同时，比起不停的埋头开发，要不停的去了解用户，与用户沟通，保持改进，提高客户满意度，这些都是可以让我们降低失败率的手段。&lt;/p&gt;

&lt;p&gt;最后，以我自勉的几个字做结尾：『勿忘初心，但行好事，莫问前程』。&lt;/p&gt;

&lt;p&gt;PS：SegmentFault 2014 黑客马拉松北京站凑巧也在这个周末举行，有兴趣可以去参加一下，地址戳&lt;a href="http://segmentfault.com/e/hackathon-beijing-2014"&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;SegementFault 是国内最活跃的黑客马拉松组织者。&amp;nbsp;&lt;a href="#fnref1" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;现在学编程的门槛已经很低了，只要愿意并且投入时间就可。Udemy 上有不少非常好的课程，一般人我不告诉他。&amp;nbsp;&lt;a href="#fnref2" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;Scott Shane 是创业研究领域的著名学者、凯思西储大学管理学院教授，也是一位投资人。&amp;nbsp;&lt;a href="#fnref3" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn4"&gt;
&lt;p&gt;Standish Group 是美国专门从事跟踪 IT 项目成功或失败的权威机构，它每年会发布一个 CHAOS Report，给出IT项目相关调查数据结果。&amp;nbsp;&lt;a href="#fnref4" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>你是否关注过消费者心理？</title>
    <link rel="alternate" href="/2014/06/17/know-your-consumers.html"/>
    <id>/2014/06/17/know-your-consumers.html</id>
    <published>2014-06-17T12:00:00+08:00</published>
    <updated>2014-06-17T12:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="消费者心理学" src="/images/know-your-consumers/consumer-psychology.jpg?1403056180"&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上一期 &lt;a href="http://teahour.fm/2014/05/22/talk-about-finddog.html"&gt;Teahour&lt;/a&gt; 跟找狗网的创始人 James 聊起 2C 产品和 2B 产品的区别时，James 提到 2C 更多的是心理学操控，在人性的操控上，给大家多一些很奇怪的好处，比如最近在台湾很火的麦当劳早安闹钟应用，在你设立闹钟起床的同时，可以去麦当劳领取一份早餐优惠劵，又有一些好玩的点让你去分享这份经历，成为热门新闻话题，瞬间引爆，上架首日就冲上 App Store 免费排行榜第一名，没有刷榜喔。仔细思考这个案例其实很有意思，里面有很多的心理学及设计考量，而这些往往是我很少关注的。&lt;/p&gt;

&lt;p&gt;移动平台、实时技术、社会化媒体、微信营销、O2O，过去几年这些名词发展的很快，给创业者带来了很大的机会，也带来了新的挑战。那是否堆砌几个关键词就能成功了？显然不是，用户根本不关心这些新概念抑或新特性，如何能用这些来提高用户满意度，影响用户的购买决策过程，才是真正的关键，而这，既是消费者心理学，又是社会心理学。&lt;/p&gt;

&lt;p&gt;百度百科对&lt;a href="http://baike.baidu.com/subview/165512/5093838.htm"&gt;消费者心理学&lt;/a&gt;的介绍中，提到了人类行为的几种常见心理以及不同类型的人群的消费心理差别。让我们回想一下自己最近几次的消费经历，不管是软件、服务还是实物，你为什么要买这个东西？你是非常理智的进行消费行为的吗？你是否受到外界因素的影响？你是否属于冲动型消费？大多数情况下，我们并不如我们自己想的那么理智，我们的消费行为是受到情感因素的影响，在一定的推波助澜下做出的决定，当然，我们后面会给自己找出千百种理由，来说服自己为何这次消费是合理的。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="农夫山泉" src="/images/know-your-consumers/nongfusanquan.jpg?1403056180"&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;这是农夫山泉的一则广告，营销其实也是如此。我们并不是要去也不能创造出消费者的一个需求，而是去激发他未开发或者未意识到的需求，驱使他做出消费决策。如何去寻找到这个需求并且刺激用户，正是分辨好的营销人员和差的营销人员的差别。Simon Sinek 曾在 TEDx 上做过一次非常棒的分享&lt;a href="http://www.ted.com/talks/simon_sinek_how_great_leaders_inspire_action"&gt;『How great leaders...&lt;/a&gt;&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="消费者心理学" src="http://yedingding.com/images/know-your-consumers/consumer-psychology.jpg?1403056180" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上一期 &lt;a href="http://teahour.fm/2014/05/22/talk-about-finddog.html"&gt;Teahour&lt;/a&gt; 跟找狗网的创始人 James 聊起 2C 产品和 2B 产品的区别时，James 提到 2C 更多的是心理学操控，在人性的操控上，给大家多一些很奇怪的好处，比如最近在台湾很火的麦当劳早安闹钟应用，在你设立闹钟起床的同时，可以去麦当劳领取一份早餐优惠劵，又有一些好玩的点让你去分享这份经历，成为热门新闻话题，瞬间引爆，上架首日就冲上 App Store 免费排行榜第一名，没有刷榜喔。仔细思考这个案例其实很有意思，里面有很多的心理学及设计考量，而这些往往是我很少关注的。&lt;/p&gt;

&lt;p&gt;移动平台、实时技术、社会化媒体、微信营销、O2O，过去几年这些名词发展的很快，给创业者带来了很大的机会，也带来了新的挑战。那是否堆砌几个关键词就能成功了？显然不是，用户根本不关心这些新概念抑或新特性，如何能用这些来提高用户满意度，影响用户的购买决策过程，才是真正的关键，而这，既是消费者心理学，又是社会心理学。&lt;/p&gt;

&lt;p&gt;百度百科对&lt;a href="http://baike.baidu.com/subview/165512/5093838.htm"&gt;消费者心理学&lt;/a&gt;的介绍中，提到了人类行为的几种常见心理以及不同类型的人群的消费心理差别。让我们回想一下自己最近几次的消费经历，不管是软件、服务还是实物，你为什么要买这个东西？你是非常理智的进行消费行为的吗？你是否受到外界因素的影响？你是否属于冲动型消费？大多数情况下，我们并不如我们自己想的那么理智，我们的消费行为是受到情感因素的影响，在一定的推波助澜下做出的决定，当然，我们后面会给自己找出千百种理由，来说服自己为何这次消费是合理的。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="农夫山泉" src="http://yedingding.com/images/know-your-consumers/nongfusanquan.jpg?1403056180" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;这是农夫山泉的一则广告，营销其实也是如此。我们并不是要去也不能创造出消费者的一个需求，而是去激发他未开发或者未意识到的需求，驱使他做出消费决策。如何去寻找到这个需求并且刺激用户，正是分辨好的营销人员和差的营销人员的差别。Simon Sinek 曾在 TEDx 上做过一次非常棒的分享&lt;a href="http://www.ted.com/talks/simon_sinek_how_great_leaders_inspire_action"&gt;『How great leaders inspire action』&lt;/a&gt;，介绍了他提出的黄金圈法则。其中很简单的一点是，用户并不为你做的东西买单，而是用户在为你&lt;strong&gt;为什么(Why)你要做这个东西&lt;/strong&gt;买单，即产品创造的使命。所以优秀的市场营销者，会先去传递产品的使命，然后才是与使命匹配的具体需求实现，由内而外地与消费者建立建立信任关系&lt;sup id="fnref1"&gt;&lt;a href="#fn1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="Golden Circle" src="http://yedingding.com/images/know-your-consumers/golden-circle.png?1403056180" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;上个月，老罗的锤子手机发布会便是一次非常成功的消费者心理操控案例，其中有两个非常具有传播性的点。从理想主义者到『我不是为了输赢，我就是认真！！』的工匠精神，和『令科技巨头蒙羞的 100 万元的 OpenSSL 基金会捐款』 ，都瞬间击中感动党泪点。后面无论是微博上还是微信上的晒单，都能感受到这些感动党那股跟老罗一样的”认真劲”。而这些人，如果我们仔细分析锤子手机的定价策略和营销手段，不难看出正是老罗要的第一批客户。老罗的第一步，不需要颠覆，不需要证明自己是乔帮主第二，他需要的是足够的订单，给自己给团队争取时间，让他能在未来进入大众市场，做出真正心目中的手机。所以，他去做用户分类，去做产品定位，然后把产品展示到这群用户面前。第一步，很成功！&lt;/p&gt;

&lt;p&gt;了解你的用户群体并做分类，这正是所有的 Customer Development 的书一再在强调的，因为所有的心理分析和用户行为分析都必须基于典型群体，从共性中找差异性，从差异性中找共性。生活中我们不可能做到取悦所有人，在销售上也一样。如果我们尝试让产品去适合所有人，结果必然是没有人会需要这样的产品，但是一旦当你清晰的面向某个细分人群，事情就会变简单了，有的放矢，对群体挖得越深，就越能针对性的采用一些策略来介入用户的决策过程。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you want to convert more people into customers, try to convert a smaller number of better-suited people.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;再说产品定位和定向营销，如果说营销上的扩散传播是用户获取的手段的话，那么当用户打开你的应用或者来到你的站点后那几十秒钟，则是另外一个战场，你需要在异次元空间清晰的跟访客进行沟通，来达到注册转化和用户留存&lt;sup id="fnref2"&gt;&lt;a href="#fn2" rel="footnote"&gt;2&lt;/a&gt;&lt;/sup&gt;的目的，所以你需要设身处地的从用户的需求出发考虑。然后，争取用文字图像甚至视频去刺激用户，诱发共鸣，让用户产生消费冲动。而这个消费动机的引发不在于你做了什么，没有人关心你做了什么&lt;sup id="fnref3"&gt;&lt;a href="#fn3" rel="footnote"&gt;3&lt;/a&gt;&lt;/sup&gt;，无论你是多么认真多么专业，用户关心的永远是他的需求是否得到了满足，也就是你做的东西是否解决了他的问题，所以，你要向用户传达的是产品所能给他提供的利益和价值，而不是产品的功能。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;People don&amp;rsquo;t want to buy a quarter-inch drill. They want a quarter-inch hole!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这里插播一个广告，因为我自己本身在企业服务这个领域创业，而企业消费市场跟个人消费市场又有很大的不同。大部分时候企业服务产品，使用产品的用户和做出决策购买产品的客户不是同一个人，甚至使用者都不参与到购买过程。所以为了优先满足付钱的人的需求，很多企业服务公司根本不关心终端用户用的爽不爽，这也是目前绝大多数企业软件完全没有用户体验可言的原因。然而，现在游戏规则正在慢慢改变，&lt;a href="http://en.wikipedia.org/wiki/Bring_your_own_device"&gt;BYOD&lt;/a&gt; 已经不再只是未来的趋势，而是已经实实在在发生在我们身边企业里的事实。现在很难想象一个公司能强制要求员工必须用什么，不能用什么，如果这样最后的结果也只能是上下敷衍。所以我一开始做风车，我必须保证的是首先这应该是一款让每天真正在用的人感觉特别爽的工具，自下而上去推行，虽说不易，但是却能创造更忠诚的用户，更有效。就如 Evernote 的 CEO Phil Libin 所言，&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;即便是企业产品也应以取悦个人用户为目标。UI 和 UX 设计在未来企业产品设计中将越来越重要，只有这样，员工才会违反公司规定来使用你们的产品。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="推荐书籍" src="http://yedingding.com/images/know-your-consumers/books.png?1403056180" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;技术在不停进步的同时，人也在进步，现在的消费者已经越来越少被电视报纸等传统轰炸式营销方式所影响，我们需要从更深层次的用户需求出发来参与到消费决策过程。所以，当我们在花时间创造一个卓越产品的同时，也请不要忘了去打造卓越的用户体验，不仅是产品使用上的，也需要是消费过程中的。学会如何打造和培养卓越的用户体验对你产品的成功是至关重要的。一篇学习过程中简单的随想，希望能给你带来一些不同的想法，后面再跟大家分享更多一些具体的实战经验。如果你有兴趣了解更多，推荐一本书，来自 Robert Cialdini 的 &lt;a href="http://www.amazon.com/Influence-Practice-Robert-B-Cialdini/dp/0205609996"&gt;Influence: Science and Practice&lt;/a&gt;。&lt;/p&gt;

&lt;div class="footnotes"&gt;
&lt;hr&gt;
&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;俗称&amp;ldquo;宗教粉&amp;quot;、&amp;quot;脑残粉&amp;quot;。&amp;nbsp;&lt;a href="#fnref1" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;参考 David McClure 的 &lt;a href="http://baike.baidu.com/view/10197444.htm"&gt;AARRR&lt;/a&gt; 模型，在『创业成长，从分析开始』(&lt;a href="http://yedingding.com/2014/03/27/growth-from-analytics.html"&gt;http://yedingding.com/2014/03/27/growth-from-analytics.html&lt;/a&gt;) 中也有介绍。&amp;nbsp;&lt;a href="#fnref2" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;也许是错误的，你的父母朋友关心，:)&amp;nbsp;&lt;a href="#fnref3" rev="footnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>我们是如何使用风车的</title>
    <link rel="alternate" href="/2014/05/20/how-fengche-use-fengche-to-build-fengche.html"/>
    <id>/2014/05/20/how-fengche-use-fengche-to-build-fengche.html</id>
    <published>2014-05-20T12:00:00+08:00</published>
    <updated>2014-05-20T12:00:00+08:00</updated>
    <author>
      <name>叶玎玎</name>
    </author>
    <summary type="html">&lt;h3&gt;前言&lt;/h3&gt;

&lt;p&gt;随着使用风车的团队越来越多，不少人都问我有没有一些风车使用最佳实践，很想知道我们风车团队自己是怎么使用风车这个工具的。所以在这里我就介绍一下我们的使用方式，整体来说，因为团队性质原因，会更加贴近产品开发团队。&lt;/p&gt;

&lt;h3&gt;背景&lt;/h3&gt;

&lt;p&gt;任何离开背景的使用方法都是没有意义的，所以在介绍我们如何使用风车前，先介绍一下我们的背景，如果你读过我之前写的一些文章的话，你可能会有所了解，我们是一个远程开发团队，每个成员都在不同的地方，主要通过在线沟通，所以在进度管理和沟通交流上很需要一个管理工具，对远程有兴趣的可以参看我的这篇文章 &lt;a href="http://yedingding.com/2013/07/24/remote-team-the-things-you-should-know.html"&gt;『远程工作经验谈 - 如何适应及如何管理』&lt;/a&gt;。二是风车的诞生初衷是为了解决我自己在项目管理上的问题的。我的上一份工作是一个企业社交工具的技术负责人，需要做项目管理的工作，我们前前后后使用过不少的工具，非常不尽如人意，我每天需要在工具上浪费一两个小时，非常痛苦，所以就萌生了自己做一个刚刚好的工具，风车就是这么来的。可以说，风车一开始是专门为开发人员打造的项目管理工具。尽管现在更加的普适，适用于任何流程化任务管理的场景，风车还是非常适合开发团队做项目管理用。&lt;/p&gt;

&lt;p&gt;</summary>
    <content type="html">&lt;h3&gt;前言&lt;/h3&gt;

&lt;p&gt;随着使用风车的团队越来越多，不少人都问我有没有一些风车使用最佳实践，很想知道我们风车团队自己是怎么使用风车这个工具的。所以在这里我就介绍一下我们的使用方式，整体来说，因为团队性质原因，会更加贴近产品开发团队。&lt;/p&gt;

&lt;h3&gt;背景&lt;/h3&gt;

&lt;p&gt;任何离开背景的使用方法都是没有意义的，所以在介绍我们如何使用风车前，先介绍一下我们的背景，如果你读过我之前写的一些文章的话，你可能会有所了解，我们是一个远程开发团队，每个成员都在不同的地方，主要通过在线沟通，所以在进度管理和沟通交流上很需要一个管理工具，对远程有兴趣的可以参看我的这篇文章 &lt;a href="http://yedingding.com/2013/07/24/remote-team-the-things-you-should-know.html"&gt;『远程工作经验谈 - 如何适应及如何管理』&lt;/a&gt;。二是风车的诞生初衷是为了解决我自己在项目管理上的问题的。我的上一份工作是一个企业社交工具的技术负责人，需要做项目管理的工作，我们前前后后使用过不少的工具，非常不尽如人意，我每天需要在工具上浪费一两个小时，非常痛苦，所以就萌生了自己做一个刚刚好的工具，风车就是这么来的。可以说，风车一开始是专门为开发人员打造的项目管理工具。尽管现在更加的普适，适用于任何流程化任务管理的场景，风车还是非常适合开发团队做项目管理用。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;计划&lt;/h3&gt;

&lt;p&gt;对于风车，我们有很多计划，比如日历、自定义状态等。但是毕竟资源所限，事情得一个一个来做，所以我们得区分长期计划和短期计划。对应到风车里，我们大量的使用收集箱和任务列表，如下图。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="Planning" src="http://yedingding.com/images/how-fengche-use-fengche-to-build-fengche/planning.png?1400582492" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;风车是项目、任务列表和任务的三层结构。任务列表作为中间很重要的一环，是任务的集合，用来组织和管理任务。对开发来说，任务列表主要就是迭代周期。所以，我们会有两类非常重要的列表，一是当前迭代列表，二是短期计划列表。当前迭代列表如上图的&lt;strong&gt;『Dashboard Stats』&lt;/strong&gt;和&lt;strong&gt;『May Day』&lt;/strong&gt;，短期计划列表如上图的&lt;strong&gt;『六月工作计划』&lt;/strong&gt;。这里之所以有两个当前迭代列表是因为『Dashboard Stats』是一个大且独立的功能，会有很多小任务，需要多人协作，所以我们单独拿出来跟踪，而『May Day』是真正的当前迭代列表。至于『六月工作计划』，顾名思义，就是我们计划在下个月做的一些事情。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;『收集箱』&lt;/strong&gt;是另外一个很重要的列表，用来收集暂时还没有计划、零散的想法，比如一些未来有可能会加的功能。这里主要供我们做头脑风暴，当跟用户交流时有一些有意思的点后，就在收集箱记录下来，但是暂时不在当前周期做任何评估。等到了新的迭代开始前，我会过一遍收集箱，调整优先级，把一些能开始做的放入到短期计划列表中。&lt;/p&gt;

&lt;p&gt;也许这时你有个新的问题，『收集箱』和『六月工作计划』是否有冲突或者冗余？这两者还是很不一样的。收集箱里存放的更多是用户故事这种，从用户角度出发的需求定义，粒度大，把一件事情说清楚就可以了。而六月执行计划里任务则从用户故事细化，变成可执行的任务，同时，这个列表也用来记录一些不太紧急的 bug。&lt;/p&gt;

&lt;p&gt;所以当做计划时，事情就方便了，可以直接在『六月工作计划』里选择优先级高的任务，移动到新的当前迭代列表就可以了。与此同时，会对任务做一些简单的评估以及分配，确保工作量合理。而已经完成的任务列表，此时已经可以归档掉了。&lt;/p&gt;

&lt;h3&gt;执行&lt;/h3&gt;

&lt;p&gt;计划后就是执行期了，流程化的任务执行是风车的核心，让正确的人能在正确的时间去做正确的事情。要做到这点，首先必须确保大家的信息对称和一致，任何人都知道项目里发生了什么，事情做到了哪一步了。所以，我们要求任何人开始做某个任务的时候，都必须更新状态到『进行中』，同时，同时在进行中的任务最好不要超过一个。如果任务完成了，需要更新状态到『已完成』，可以让团队其他成员进行验收。所以，我随时都可以了解当前迭代进行到什么状态了，团队每个人正在做什么，哪些任务已经完成等待验收，哪些任务已经验收通过部署到线上，哪些任务还需要完成，如下图。同时，事情有轻重缓急，有重要不重要、紧急不紧急两个维度，所以我们约定待办列表里越上面的任务越紧急，同时在任务详情里设置重要或者不重要。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="任务清单" src="http://yedingding.com/images/how-fengche-use-fengche-to-build-fengche/center.png?1400582492" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;每个任务在待办的状态时并不一定会被分配给某位成员，我们更主张主动的去领任务，看看有什么自己可以做的，包括即使已经被分配给别人了。除了负责人以外，有些任务需要多人协作，比如上图 Roy 在实现『下载所有附件』的功能时，需要我这边提供一些前端实现上的帮忙，所以我会被 Roy 加入到协作者列表里面，这样这个任务发生的任何变化都会实时的通知到 Roy 和我，包括动态和讨论。关于协作者这个功能的用法，可以参考 Roy 写得这篇文章，&lt;a href="https://fengcheco.com/blog/new-feature-task-followers/"&gt;『新功能：协作者』&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="任务详情" src="http://yedingding.com/images/how-fengche-use-fengche-to-build-fengche/details.png?1400582492" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;讨论是另一个工作上非常重要的部分。我们是远程团队，大部分沟通都发生在线上，即使在线下我也不主张随意的去打断同事，见我之前写的文章 &lt;a href="http://yedingding.com/2013/12/03/improve-productivity-in-office.html"&gt;『不要让办公室成为你的效率杀手』&lt;/a&gt;。我们会尽量把跟任务执行相关的事情都放到风车里讨论，主要是出于两点考虑。首先是任何讨论都是按照主题划分的，对比用 QQ 这些聊天工具，实时的交流体验一样，但是主题明确，不会错乱，过程和结论也都有记录，随时可以回顾和查找。同时，对比交流直接靠吼，虽然讨论是同步推送到所有团队成员那里，但是可以异步处理，没有打断别人，可以等到完成手上工作后才去处理。有时如果需要把某个人拉进来讨论一些 feature，直接用 @ mention 就可以了，对方就会收到实时的通知。&lt;/p&gt;

&lt;p&gt;&lt;aside class="aside"&gt;
  &lt;img alt="任务讨论" src="http://yedingding.com/images/how-fengche-use-fengche-to-build-fengche/activity.png?1400582492" /&gt;
&lt;/aside&gt;&lt;/p&gt;

&lt;p&gt;作为产品团队，时常会有一些新的需求进来，亦或是一些 bug。我们是允许随时有新的任务进来的，但是如果是哪种迟一天做早一天做关系不大的任务，就没必要添加进来打乱节奏了。&lt;/p&gt;

&lt;h3&gt;发布&lt;/h3&gt;

&lt;p&gt;作为产品团队，只有发布才是带来最终价值的，这也是我坚持做持续发布，而不是等整个迭代结束后统一发布的原因。另外，我们的代码质量更多的依赖代码审核和自动化测试，而不是放在 staging 环境做人肉测试，除非是一些比较大拿不准的变化。我在之前的文章&lt;a href="http://yedingding.com/2013/09/11/practical-git-flow-for-startups.html"&gt;『实用 GIT 工作流』&lt;/a&gt;介绍了我们团队使用的代码工作流，简单说，就是必须随时有一个可发布的分支，对应风车是 master 分支，同时，工作分支对应风车里的具体任务，跟 git commits 结合起来，同时能很简单很早的 merge 过来。我们的代码审核流程可以阅读这篇文章&lt;a href="http://yedingding.com/2013/08/08/dig-into-code-review-process.html"&gt;『让代码审查成为你的团队习惯』&lt;/a&gt;。&lt;/p&gt;

&lt;h3&gt;总结&lt;/h3&gt;

&lt;p&gt;回到风车的设计初衷，我们就是想设计一个刚刚好的工具，即使以后会有所扩展，但是一致的原则是用户使用仍然要简单高效，如果违背了这个原则，那么宁愿砍功能。我希望用户在使用时能专注做事，不要被冗余的东西所干扰，分散注意力或者带来额外的操作成本，这也是我们在可视范围只放必要东西的原因，让用户可以节省时间，更多的花在做事执行上。尽管用户会有各种各样的要求，希望能加这个功能那个功能，但是我会非常慎重的去筛选，我真的受够了过去在那些复杂的工具上浪费一两个小时！！！&lt;/p&gt;

&lt;p&gt;如果说风车只有一个价值，那就是能让你的团队真正的不断优化工作流程。偶尔能听到一些人说人是最重要的，流程和工具无所谓，我只能说声呵呵，要不你就是能力没到，要不你就是没用过好的工具。一个简单的工具加上一个优化的流程能让整个团队事半功倍，这也是为什么在敏捷项目管理过程中会单独有个非常重要的步骤 &lt;strong&gt;Retrospective&lt;/strong&gt;，正是为了迭代改进流程。当你有了合适的人和合适的流程，千万不要忽略合适的工具，它真的会带来很大的不同，无论是不是风车。&lt;/p&gt;
</content>
  </entry>
</feed>
